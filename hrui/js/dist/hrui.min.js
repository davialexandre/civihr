!function(t,o){function n(o){o&&o.departments&&o.departments.length>0?t(".crm-contact-detail-departments").html("<strong>Department:</strong> "+o.departments.join(", ")):t(".crm-contact-detail-departments").html("")}t(document).on("crmLoad",function(o){t(".crm-inline-edit").one("DOMSubtreeModified",function(){var o=t(this).find("form");1===o.length&&o.find("label").each(function(){var o=t(this),n=o.attr("for");t("#"+n).attr("placeholder",o.text())})})}).on("updateContactHeader",function(o,c){var a;void 0!==c.contract&&((a=c.contract)?(t(".crm-summary-contactname-block").removeClass("crm-summary-contactname-block-without-contract"),a.position&&t(".crm-contact-detail-position").html("<strong>Position:</strong> "+a.position),a.location&&t(".crm-contact-detail-location").html("<strong>Normal place of work:</strong> "+a.location)):(t(".crm-summary-contactname-block").addClass("crm-summary-contactname-block-without-contract"),t(".crm-contact-detail-position").html(""),t(".crm-contact-detail-location").html(""),n(null))),void 0!==c.roles&&n(c.roles)})}(CRM.$,CRM._);
!function(e,t){function a(){var t=e(this)[0].files[0];e("#js-uploaded-file").remove(),void 0!==t&&(e(this).after('<span id="js-uploaded-file" class="uploaded-file">'+t.name+' <span class="uploaded-file-icon-trash"><i class="fa fa-trash-o"></i> Remove</span>'),e(".uploaded-file-icon-trash").on("click",o))}function r(e){e.find("label").attr("for",e.find(".crm-form-date").attr("id"))}function o(){var t=e("#js-uploaded-file").parent().find('input[type="file"]');e("#js-uploaded-file").remove(),t.val("")}e(document).on("crmLoad",function(t){var o,i,n;1===e(o="input[type='file']").length&&e(o).on("change",a),1===e(".CRM_HRRecruitment_Form_HRVacancy").length&&(r(e('label[for="start_date"]').parents("tr")),r(e('label[for="end_date"]').parents("tr")),e('[name="entryURL"]').val().indexOf(";template=1")>-1&&e(e(".CRM_HRRecruitment_Form_HRVacancy tbody").get(0)).addClass("CRM_HRRecruitment_Form_HRVacancy_Template")),i=t,"contactForm"!==CRM.formName&&"viewSummary"!==CRM.pageName||(e(".crm-contact-job_title",".crm-summary-contactinfo-block").length&&e(".crm-contact-tabs-list #tab_summary a",i.target).text("Personal Details"),i.target,e(".Inline_Custom_Data").length&&e(".Inline_Custom_Data").removeClass("crm-collapsible collapsed").addClass("crm-summary-block").insertAfter(".crm-summary-contactinfo-block").find(".collapsible-title").hide().end().find(".crm-summary-block").show(),e("#customFields").length<1&&e("#Inline_Custom_Data").detach().find(".label").each(function(){var t=e(this),a=t.next(),r=e("<td/>");r.append(t.find("label")),r.append(e("<br/>")),r.append(a.html()),e("#nick_name").parent().after(r)}),n=i.target,e("div.crm-contact-current_employer, div.crm-contact-job_title",".crm-summary-contactinfo-block").parent("div.crm-summary-row").hide(),e("form#ContactInfo input#employer_id, form#ContactInfo input#job_title",n).closest("div.crm-summary-row").hide(),e("input#employer_id, input#job_title","form#Contact").parent("td").hide(),e(".HRJobContract_Summary",n).insertBefore(e(".crm-summary-contactinfo-block")),e("div.email-signature, td#Email-Bulkmail-html","form#Contact").hide(),e("#Email-Primary","form#Contact").prev("td").prev("td").hide(),e("td#Email-Bulkmail-html, #Email-Primary","form#Contact").prev("td").hide(),e(".crm-demographics-accordion","form#Contact").insertAfter(e(".crm-contactDetails-accordion")),e("tr#Phone_Block_2","form#Contact").length<1&&e("#addPhone").click()),e("#activityCustomData").attr("colspan",3),e("#crm-activity-view-table .crm-case-activity-view-Client .label").html("Contact"),e("span.crm-frozen-field",".crm-profile-name-hrident_tab").closest("div").parent("div").hide(),e(".crm-accordion-header.crm-master-accordion-header").on("click",function(){window.setTimeout(function(){Array.prototype.forEach.call(document.querySelectorAll(".listing-box"),function(e){Ps.initialize(e)})},0)}),e("INPUT#contact_source").parent("td").children("a").click(function(){e("#crm-notification-container .crm-help .notify-content").remove(),e("#crm-notification-container .crm-help p").length&&e("#crm-notification-container .crm-help p").remove(),e("#crm-notification-container .crm-help").append("<p>Source is a useful field where data has been migrated to CiviHR from one or a number of other legacy systems. The Source field will indicate which legacy system the contact has come from.</p>")})}).ready(function(){var t,a,r,o,i,n;e.ajax("/civicrm/hrcore/usermenu?snippet=4",{dataType:"html",success:function(t){var a,r,o;a="civihr-menu",r=e(t),(o=e("<div>")).attr("id",a),o.append(e("#civicrm-menu")),o.append(r),o.insertAfter("#page")}}),t=e(".crm-link-home"),a=e(".crm-logo-sm",t).addClass("chr_logo chr_logo--default-color").removeClass("crm-logo-sm").wrap('<span class="menumain-icon">').parent(),o=a,r=e("li > a",t).first().text("Home").wrapInner('<span class="menumain-label">').prepend(o),i=r,t.off().find("#civicrm-home").before(i).remove(),e(".CRM_HRRecruitment_Form_Application").addClass("crm-form-block"),e(".CRM_HRRecruitment_Form_Application .crm-profile-name-application_profile").addClass("form-layout-compressed"),e("#root-menu-div .menu-item-arrow").each(function(t){var a=e(this);a.before('<i class="fa fa-caret-right menu-item-arrow"></i>'),a.remove()}),n="activetarget",e(".menumain").not(".crm-Self_Service_Portal").hover(function(){e(this).addClass(n)},function(){e(this).removeClass(n)})})}(CRM.$,CRM._);
!function(t){"use strict";var n=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;t.fn.attrchange=function(t){if(n){var e={subtree:!1,attributes:!0},i=new n(function(n){n.forEach(function(n){t.call(n.target,n)})});return this.each(function(){i.observe(this,e)})}}}(CRM.$);
!function(t){"use strict";var i=t("body");i.on("click","#bootstrap-theme .btn-slide",function(){var n,a,e=t(this),o=e.children("ul.panel");function c(){t(".civihr-popup").remove(),i.removeClass("civihr-popup-open")}c(),n=o.clone(!0).appendTo(i).addClass("civihr-popup"),a=e.offset(),n.css({left:+a.left-(n.width()-e.outerWidth()),top:+a.top+e.outerHeight()}),n.show(),i.addClass("civihr-popup-open"),n.find("a").click(function(){var i=t(this).parent().index();o.find("li:nth("+i+") a").click()}),e.data("attrchange-is-on")||(e.data("attrchange-is-on",!0),e.attrchange(function(){e.hasClass("btn-slide-active")||c()}))})}(CRM.$);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QuanMiLCJocnVpLmpzIiwiY2l2aWhyLXBvcHVwL2F0dHJjaGFuZ2UuanMiLCJjaXZpaHItcG9wdXAvY2l2aWhyLXBvcHVwLmpzIl0sIm5hbWVzIjpbIiQiLCJfIiwidXBkYXRlQ29udGFjdEhlYWRlclJvbGVzRGV0YWlscyIsInJvbGVzIiwiZGVwYXJ0bWVudHMiLCJsZW5ndGgiLCJodG1sIiwiam9pbiIsImRvY3VtZW50Iiwib24iLCJlIiwib25lIiwiJGZvcm0iLCJ0aGlzIiwiZmluZCIsImVhY2giLCIkbGFiZWwiLCJpZCIsImF0dHIiLCJ0ZXh0IiwiZGF0YSIsImNvbnRyYWN0IiwicmVtb3ZlQ2xhc3MiLCJwb3NpdGlvbiIsImxvY2F0aW9uIiwiYWRkQ2xhc3MiLCJDUk0iLCJpbnNlcnRGaWxlIiwiZmlsZU5hbWUiLCJmaWxlcyIsInJlbW92ZSIsInVuZGVmaW5lZCIsImFmdGVyIiwibmFtZSIsInJlbW92ZUZpbGUiLCJsaW5rTGFiZWxUb0RhdGVwaWNrZXJJbnB1dCIsIiRsaW5lIiwiJGlucHV0IiwicGFyZW50IiwidmFsIiwic2VsZWN0b3IiLCJ0YXJnZXQiLCJwYXJlbnRzIiwiaW5kZXhPZiIsImdldCIsImZvcm1OYW1lIiwicGFnZU5hbWUiLCJpbnNlcnRBZnRlciIsImhpZGUiLCJlbmQiLCJzaG93IiwiZGV0YWNoIiwiJGxhYmVsQ2VsbCIsIiRmaWVsZENlbGwiLCJuZXh0IiwiJG5ld1RkIiwiYXBwZW5kIiwiY2xvc2VzdCIsImluc2VydEJlZm9yZSIsInByZXYiLCJjbGljayIsIndpbmRvdyIsInNldFRpbWVvdXQiLCJBcnJheSIsInByb3RvdHlwZSIsImZvckVhY2giLCJjYWxsIiwicXVlcnlTZWxlY3RvckFsbCIsImVsZW1lbnQiLCJQcyIsImluaXRpYWxpemUiLCJjaGlsZHJlbiIsInJlYWR5IiwiJG1lbnVJdGVtIiwiJHdyYXBwZWRMb2dvIiwiJGN1c3RvbUhvbWVMaW5rIiwiJGFwcExvZ28iLCIkaG9tZUxpbmsiLCJjbGFzc05hbWUiLCJhamF4IiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwibWVudU1hcmt1cCIsIndyYXBwZXJJZCIsIiRtZW51TWFya3VwIiwiJG1lbnVXcmFwcGVyIiwid3JhcCIsImZpcnN0Iiwid3JhcElubmVyIiwicHJlcGVuZCIsIm9mZiIsImJlZm9yZSIsIiRlbGVtZW50IiwiJGFycm93Iiwibm90IiwiaG92ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsIk1vek11dGF0aW9uT2JzZXJ2ZXIiLCJmbiIsImF0dHJjaGFuZ2UiLCJjYWxsYmFjayIsIm9wdGlvbnMiLCJzdWJ0cmVlIiwiYXR0cmlidXRlcyIsIm9ic2VydmVyIiwibXV0YXRpb25zIiwib2JzZXJ2ZSIsIiRib2R5IiwiJHBvcHVwQ2xvbmUiLCJidXR0b25PZmZzZXQiLCIkYnV0dG9uIiwiJHBvcHVwIiwiY2xvc2VQb3B1cFBhbmVscyIsImNsb25lIiwiYXBwZW5kVG8iLCJvZmZzZXQiLCJjc3MiLCJsZWZ0Iiwid2lkdGgiLCJvdXRlcldpZHRoIiwidG9wIiwib3V0ZXJIZWlnaHQiLCJhY3Rpb25JbmRleCIsImluZGV4IiwiaGFzQ2xhc3MiXSwibWFwcGluZ3MiOiJDQUFDLFNBQVVBLEVBQUdDLEdBd0RaLFNBQVNDLEVBQWdDQyxHQUNuQ0EsR0FBU0EsRUFBTUMsYUFBZUQsRUFBTUMsWUFBWUMsT0FBUyxFQUMzREwsRUFBRSxtQ0FBbUNNLEtBQUssZ0NBQWtDSCxFQUFNQyxZQUFZRyxLQUFLLE9BRW5HUCxFQUFFLG1DQUFtQ00sS0FBSyxJQTFEOUNOLEVBQUVRLFVBQ0NDLEdBQUcsVUFBVyxTQUFTQyxHQUN0QlYsRUFBRSxvQkFBb0JXLElBQUkscUJBQXNCLFdBQzlDLElBQUlDLEVBQVFaLEVBQUVhLE1BQU1DLEtBQUssUUFFSixJQUFqQkYsRUFBTVAsUUFDUk8sRUFBTUUsS0FBSyxTQUFTQyxLQUFLLFdBQ3ZCLElBQUlDLEVBQVNoQixFQUFFYSxNQUNYSSxFQUFLRCxFQUFPRSxLQUFLLE9BQ3JCbEIsRUFB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R0FBRyxRQUFTLDhCQUErQixXQUMvQyxJQUFJb0csRUF5RUVDLEVBeEVGQyxFQUFVL0csRUFBRWEsTUFDWm1HLEVBQVNELEVBQVF4QyxTQUFTLFlBYzlCLFNBQVMwQyxJQUNQakgsRUFBRSxpQkFBaUI4QixTQUNuQjhFLEVBQU10RixZQUFZLHFCQWJsQjJGLElBcUJBSixFQUFjRyxFQUFPRSxPQUFNLEdBQ3hCQyxTQUFTUCxHQUNUbkYsU0FBUyxnQkE2Q1JxRixFQUFlQyxFQUFRSyxTQUUzQlAsRUFBWVEsS0FDVkMsTUFBT1IsRUFBYVEsTUFBUVQsRUFBWVUsUUFBVVIsRUFBUVMsY0FDMURDLEtBQU1YLEVBQWFXLElBQU1WLEVBQVFXLGdCQUVuQ2IsRUFBWTNELE9BQ1owRCxFQUFNbkYsU0FBUyxxQkFuQmZvRixFQUFZL0YsS0FBSyxLQUFLOEMsTUFBTSxXQUMxQixJQUFJK0QsRUFBYzNILEVBQUVhLE1BQU15QixTQUFTc0YsUUFFbkNaLEVBQU9sRyxLQUFLLFVBQVk2RyxFQUFjLE9BQU8vRCxVQXhCM0NtRCxFQUFRM0YsS0FBSyxzQkFJakIyRixFQUFRM0YsS0FBSyxvQkFBb0IsR0FDakMyRixFQUFRWCxXQUFXLFdBRWJXLEVBQVFjLFNBQVMscUJBSXJCWixTQXhEUixDQXdGR3ZGLElBQUkxQiIsImZpbGUiOiJocnVpLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCwgXykge1xuXG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjcm1Mb2FkJywgZnVuY3Rpb24oZSkge1xuICAgICAgJCgnLmNybS1pbmxpbmUtZWRpdCcpLm9uZSgnRE9NU3VidHJlZU1vZGlmaWVkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciAkZm9ybSA9ICQodGhpcykuZmluZCgnZm9ybScpO1xuXG4gICAgICAgIGlmICgkZm9ybS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAkZm9ybS5maW5kKCdsYWJlbCcpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgJGxhYmVsID0gJCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBpZCA9ICRsYWJlbC5hdHRyKCdmb3InKTtcbiAgICAgICAgICAgICQoJyMnICsgaWQpLmF0dHIoJ3BsYWNlaG9sZGVyJywgJGxhYmVsLnRleHQoKSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgICAub24oJ3VwZGF0ZUNvbnRhY3RIZWFkZXInLCBmdW5jdGlvbiAoZSwgZGF0YSkge1xuICAgICAgaWYgKHR5cGVvZiBkYXRhLmNvbnRyYWN0ICE9PSAndW5kZWZpbmVkJykgIHtcbiAgICAgICAgdXBkYXRlQ29udGFjdEhlYWRlckNvbnRyYWN0RGV0YWlscyhkYXRhLmNvbnRyYWN0KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBkYXRhLnJvbGVzICE9PSAndW5kZWZpbmVkJykgIHtcbiAgICAgICAgdXBkYXRlQ29udGFjdEhlYWRlclJvbGVzRGV0YWlscyhkYXRhLnJvbGVzKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAvKipcbiAgICogVXBkYXRlcyB0aGUgY29udGFjdCBoZWFkZXIgd2l0aCB0aGUgZ2l2ZW4gY29udHJhY3QgZGV0YWlsc1xuICAgKlxuICAgKiBAcGFyYW0gIHtvYmplY3R9IGNvbnRyYWN0XG4gICAqL1xuICBmdW5jdGlvbiB1cGRhdGVDb250YWN0SGVhZGVyQ29udHJhY3REZXRhaWxzKGNvbnRyYWN0KSB7XG4gICAgaWYgKGNvbnRyYWN0KSAge1xuICAgICAgJCgnLmNybS1zdW1tYXJ5LWNvbnRhY3RuYW1lLWJsb2NrJykucmVtb3ZlQ2xhc3MoJ2NybS1zdW1tYXJ5LWNvbnRhY3RuYW1lLWJsb2NrLXdpdGhvdXQtY29udHJhY3QnKTtcblxuICAgICAgaWYgKGNvbnRyYWN0LnBvc2l0aW9uKSB7XG4gICAgICAgICQoJy5jcm0tY29udGFjdC1kZXRhaWwtcG9zaXRpb24nKS5odG1sKCc8c3Ryb25nPlBvc2l0aW9uOjwvc3Ryb25nPiAnKyBjb250cmFjdC5wb3NpdGlvbik7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb250cmFjdC5sb2NhdGlvbikge1xuICAgICAgICAkKCcuY3JtLWNvbnRhY3QtZGV0YWlsLWxvY2F0aW9uJykuaHRtbCgnPHN0cm9uZz5Ob3JtYWwgcGxhY2Ugb2Ygd29yazo8L3N0cm9uZz4gJysgY29udHJhY3QubG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAkKCcuY3JtLXN1bW1hcnktY29udGFjdG5hbWUtYmxvY2snKS5hZGRDbGFzcygnY3JtLXN1bW1hcnktY29udGFjdG5hbWUtYmxvY2std2l0aG91dC1jb250cmFjdCcpO1xuICAgICAgJCgnLmNybS1jb250YWN0LWRldGFpbC1wb3NpdGlvbicpLmh0bWwoJycpO1xuICAgICAgJCgnLmNybS1jb250YWN0LWRldGFpbC1sb2NhdGlvbicpLmh0bWwoJycpO1xuXG4gICAgICB1cGRhdGVDb250YWN0SGVhZGVyUm9sZXNEZXRhaWxzKG51bGwpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBjb250YWN0IGhlYWRlciB3aXRoIHRoZSBnaXZlbiByb2xlcyBkZXRhaWxzXG4gICAqXG4gICAqIEBwYXJhbSAge29iamVjdH0gY29udHJhY3RcbiAgICovXG4gIGZ1bmN0aW9uIHVwZGF0ZUNvbnRhY3RIZWFkZXJSb2xlc0RldGFpbHMocm9sZXMpIHtcbiAgICBpZiAocm9sZXMgJiYgcm9sZXMuZGVwYXJ0bWVudHMgJiYgcm9sZXMuZGVwYXJ0bWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgJCgnLmNybS1jb250YWN0LWRldGFpbC1kZXBhcnRtZW50cycpLmh0bWwoJzxzdHJvbmc+RGVwYXJ0bWVudDo8L3N0cm9uZz4gJyArIHJvbGVzLmRlcGFydG1lbnRzLmpvaW4oJywgJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKCcuY3JtLWNvbnRhY3QtZGV0YWlsLWRlcGFydG1lbnRzJykuaHRtbCgnJyk7XG4gICAgfVxuICB9XG59KENSTS4kLCBDUk0uXykpO1xuIiwiLyogZ2xvYmFsIFBzICovXG5cbi8vIENvcHlyaWdodCBDaXZpQ1JNIExMQyAyMDEzLiBTZWUgaHR0cDovL2Npdmljcm0ub3JnL2xpY2Vuc2luZ1xuKGZ1bmN0aW9uICgkLCBfKSB7XG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjcm1Mb2FkJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGFkZFVwbG9hZEZpbGVMaXN0ZW5lcihcImlucHV0W3R5cGU9J2ZpbGUnXVwiKTtcbiAgICAgIGFtZW5kVmFjYW5jeUZvcm0oKTtcbiAgICAgIGFtZW5kQ29udGFjdFBhZ2VBbmRGb3JtKGUpO1xuICAgICAgYXBwbHlNaXNjQ2hhbmdlcygpO1xuICAgICAgY2hhbmdlQ29udGFjdFNvdXJjZUZpZWxkSGVscFRleHQoKTtcbiAgICB9KVxuICAgIC5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgICBhZGRVc2VyTWVudVRvTWFpbk1lbnUoKTtcbiAgICAgIGFtZW5kQXBwTG9nb01lbnVJdGVtKCk7XG4gICAgICBhbWVuZEFwcGxpY2F0aW9uRm9ybSgpO1xuICAgICAgdXNlRm9udEF3ZXNvbWVBcnJvd3NJblN1Yk1lbnVJdGVtcygpO1xuICAgICAgdG9nZ2xlQWN0aXZlQ2xhc3NPbkhvdmVyT25BbnlNYWluTWVudUl0ZW0oKTtcbiAgICB9KTtcblxuICAvKipcbiAgICogQ3VzdG9taXplcyB0aGUgYXBwIGxvZ28gbWVudSBpdGVtLCBzd2l0Y2hpbmcgZnJvbSB0aGUgQ2l2aUNSTSBsb2dvXG4gICAqIHRvIHRoZSBDaXZpSFIgbG9nbywgYW5kIG1ha2luZyB0aGUgaXRlbSBhIGRpcmVjdCBsaW5rIGluc3RlYWQgb2YgYVxuICAgKiB0b2dnbGUgZm9yIGEgc3ViIG1lbnUgZHJvcGRvd25cbiAgICovXG4gIGZ1bmN0aW9uIGFtZW5kQXBwTG9nb01lbnVJdGVtICgpIHtcbiAgICB2YXIgJG1lbnVJdGVtID0gJCgnLmNybS1saW5rLWhvbWUnKTtcbiAgICB2YXIgJHdyYXBwZWRMb2dvID0gc3dhcEFuZFdyYXBBcHBMb2dvKCRtZW51SXRlbSk7XG4gICAgdmFyICRjdXN0b21Ib21lTGluayA9IGN1c3RvbWl6ZUhvbWVMaW5rSW5Mb2dvTWVudUl0ZW0oJG1lbnVJdGVtLCAkd3JhcHBlZExvZ28pO1xuXG4gICAgcmVtb3ZlTG9nb1N1Yk1lbnVBbmRLZWVwT25seUhvbWVMaW5rKCRtZW51SXRlbSwgJGN1c3RvbUhvbWVMaW5rKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIHRoZSB1c2VyIG1lbnUgYnkgZmV0Y2hpbmcgaXQgZnJvbSB0aGUgaHJjb3JlIGV4dGVuc2lvblxuICAgKi9cbiAgZnVuY3Rpb24gYWRkVXNlck1lbnVUb01haW5NZW51ICgpIHtcbiAgICAkLmFqYXgoJy9jaXZpY3JtL2hyY29yZS91c2VybWVudT9zbmlwcGV0PTQnLCB7XG4gICAgICBkYXRhVHlwZTogJ2h0bWwnLFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKG1lbnVNYXJrdXApIHtcbiAgICAgICAgaW5qZWN0VXNlck1lbnVJbkFNYWluTWVudVdyYXBwZXIobWVudU1hcmt1cCwgJ2Npdmloci1tZW51Jyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQWRkIGFuIGV2ZW50IGxpc3RlbmVyIG9uIGlucHV0W3R5cGU9XCJmaWxlXCJdXG4gICAqIEBwYXJhbSB7alF1ZXJ5IE9iamVjdH0gc2VsZWN0b3IgW3NlbGVjdG9yIGZyb20gaW5wdXQgZmlsZV1cbiAgICovXG4gIGZ1bmN0aW9uIGFkZFVwbG9hZEZpbGVMaXN0ZW5lciAoc2VsZWN0b3IpIHtcbiAgICBpZiAoJChzZWxlY3RvcikubGVuZ3RoID09PSAxKSB7XG4gICAgICAkKHNlbGVjdG9yKS5vbignY2hhbmdlJywgaW5zZXJ0RmlsZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEFtZW5kcyB0aGUgYXBwbGljYXRpb24gZm9ybVxuICAgKi9cbiAgZnVuY3Rpb24gYW1lbmRBcHBsaWNhdGlvbkZvcm0gKCkge1xuICAgICQoJy5DUk1fSFJSZWNydWl0bWVudF9Gb3JtX0FwcGxpY2F0aW9uJykuYWRkQ2xhc3MoJ2NybS1mb3JtLWJsb2NrJyk7XG4gICAgJCgnLkNSTV9IUlJlY3J1aXRtZW50X0Zvcm1fQXBwbGljYXRpb24gLmNybS1wcm9maWxlLW5hbWUtYXBwbGljYXRpb25fcHJvZmlsZScpLmFkZENsYXNzKCdmb3JtLWxheW91dC1jb21wcmVzc2VkJyk7XG4gIH1cblxuICAvKipcbiAgICogQW1lbmRzIHRoZSBjb250YWN0IHBhZ2UgYW5kIHRoZSBjb250YWN0IGZvcm1cbiAgICovXG4gIGZ1bmN0aW9uIGFtZW5kQ29udGFjdFBhZ2VBbmRGb3JtIChlKSB7XG4gICAgaWYgKENSTS5mb3JtTmFtZSA9PT0gJ2NvbnRhY3RGb3JtJyB8fCBDUk0ucGFnZU5hbWUgPT09ICd2aWV3U3VtbWFyeScpIHtcbiAgICAgIC8vIFJlbmFtZSBcIlN1bW1hcnlcIiB0YWIgdG8gXCJQZXJzb25hbCBEZXRhaWxzXCJcbiAgICAgIC8vIEhhY2sgdG8gY2hlY2sgY29udGFjdCB0eXBlIC0gVGhpcyBmaWVsZCBvbmx5IGFwcGVhcnMgZm9yIGluZGl2aWR1YWxzXG4gICAgICBpZiAoJCgnLmNybS1jb250YWN0LWpvYl90aXRsZScsICcuY3JtLXN1bW1hcnktY29udGFjdGluZm8tYmxvY2snKS5sZW5ndGgpIHtcbiAgICAgICAgJCgnLmNybS1jb250YWN0LXRhYnMtbGlzdCAjdGFiX3N1bW1hcnkgYScsIGUudGFyZ2V0KS50ZXh0KCdQZXJzb25hbCBEZXRhaWxzJyk7XG4gICAgICB9XG5cbiAgICAgIG1hbmlwdWxhdGVET01PZklubGluZUN1c3RvbURhdGEoZS50YXJnZXQpO1xuICAgICAgbWlzY0NvbnRhY3RQYWdlQ2hhbmdlcyhlLnRhcmdldCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEFtZW5kcyB0aGUgdmFjYW5jeSBmb3JtXG4gICAqL1xuICBmdW5jdGlvbiBhbWVuZFZhY2FuY3lGb3JtICgpIHtcbiAgICBpZiAoJCgnLkNSTV9IUlJlY3J1aXRtZW50X0Zvcm1fSFJWYWNhbmN5JykubGVuZ3RoID09PSAxKSB7XG4gICAgICBsaW5rTGFiZWxUb0RhdGVwaWNrZXJJbnB1dCgkKCdsYWJlbFtmb3I9XCJzdGFydF9kYXRlXCJdJykucGFyZW50cygndHInKSk7XG4gICAgICBsaW5rTGFiZWxUb0RhdGVwaWNrZXJJbnB1dCgkKCdsYWJlbFtmb3I9XCJlbmRfZGF0ZVwiXScpLnBhcmVudHMoJ3RyJykpO1xuXG4gICAgICAvLyBBZGQgYSBjbGFzcyB0byBpZGVudGlmeSB0aGUgZm9ybSAnTmV3IFZhY2FuY3kgVGVtcGxhdGUnXG4gICAgICBpZiAoJCgnW25hbWU9XCJlbnRyeVVSTFwiXScpLnZhbCgpLmluZGV4T2YoJzt0ZW1wbGF0ZT0xJykgPiAtMSkge1xuICAgICAgICAkKCQoJy5DUk1fSFJSZWNydWl0bWVudF9Gb3JtX0hSVmFjYW5jeSB0Ym9keScpLmdldCgwKSkuYWRkQ2xhc3MoJ0NSTV9IUlJlY3J1aXRtZW50X0Zvcm1fSFJWYWNhbmN5X1RlbXBsYXRlJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEFwcGxpZXMgbWlzY2VsbGFuZW91cyBVSSBjaGFuZ2VzXG4gICAqL1xuICBmdW5jdGlvbiBhcHBseU1pc2NDaGFuZ2VzICgpIHtcbiAgICAkKCcjYWN0aXZpdHlDdXN0b21EYXRhJykuYXR0cignY29sc3BhbicsIDMpO1xuICAgICQoJyNjcm0tYWN0aXZpdHktdmlldy10YWJsZSAuY3JtLWNhc2UtYWN0aXZpdHktdmlldy1DbGllbnQgLmxhYmVsJykuaHRtbCgnQ29udGFjdCcpO1xuICAgICQoJ3NwYW4uY3JtLWZyb3plbi1maWVsZCcsICcuY3JtLXByb2ZpbGUtbmFtZS1ocmlkZW50X3RhYicpLmNsb3Nlc3QoJ2RpdicpLnBhcmVudCgnZGl2JykuaGlkZSgpO1xuXG4gICAgJCgnLmNybS1hY2NvcmRpb24taGVhZGVyLmNybS1tYXN0ZXItYWNjb3JkaW9uLWhlYWRlcicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubGlzdGluZy1ib3gnKSwgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICBQcy5pbml0aWFsaXplKGVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICAgIH0sIDApO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZXMgb2Ygc29yY2UgaGVscCB0ZXh0XG4gICAqL1xuICBmdW5jdGlvbiBjaGFuZ2VDb250YWN0U291cmNlRmllbGRIZWxwVGV4dCAoKSB7XG4gICAgJCgnSU5QVVQjY29udGFjdF9zb3VyY2UnKS5wYXJlbnQoJ3RkJykuY2hpbGRyZW4oJ2EnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAkKCcjY3JtLW5vdGlmaWNhdGlvbi1jb250YWluZXIgLmNybS1oZWxwIC5ub3RpZnktY29udGVudCcpLnJlbW92ZSgpO1xuXG4gICAgICBpZiAoJCgnI2NybS1ub3RpZmljYXRpb24tY29udGFpbmVyIC5jcm0taGVscCBwJykubGVuZ3RoKSB7XG4gICAgICAgICQoJyNjcm0tbm90aWZpY2F0aW9uLWNvbnRhaW5lciAuY3JtLWhlbHAgcCcpLnJlbW92ZSgpO1xuICAgICAgfVxuXG4gICAgICAkKCcjY3JtLW5vdGlmaWNhdGlvbi1jb250YWluZXIgLmNybS1oZWxwJykuYXBwZW5kKCc8cD5Tb3VyY2UgaXMgYSB1c2VmdWwgZmllbGQgd2hlcmUgZGF0YSBoYXMgYmVlbiBtaWdyYXRlZCB0byBDaXZpSFIgZnJvbSBvbmUgb3IgYSBudW1iZXIgb2Ygb3RoZXIgbGVnYWN5IHN5c3RlbXMuIFRoZSBTb3VyY2UgZmllbGQgd2lsbCBpbmRpY2F0ZSB3aGljaCBsZWdhY3kgc3lzdGVtIHRoZSBjb250YWN0IGhhcyBjb21lIGZyb20uPC9wPicpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEZpbmRzIHRoZSBvcmlnaW5hbCBsaW5rIHRvIHRoZSBob21lcGFnZSwgY2hhbmdlcyB0aGUgdGV4dCwgd3JhcHMgaXQgaW4gYVxuICAgKiBgbWVudW1haW4tbGFiZWxgIGVsZW1lbnQgYW5kIHByZXBlbmRzIGludGVybmFsbHkgdGhlIGdpdmVuIGFwcCBsb2dvXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSAkbWVudUl0ZW0gVGhlIGNvbnRleHQgd2hlcmUgdG8gZmluZCB0aGUgbGlua1xuICAgKiBAcGFyYW0ge29iamVjdH0gJGFwcExvZ29cbiAgICogQHJldHVybiB0aGUgY3VzdG9taXplZCBob21lIGxpbmtcbiAgICovXG4gIGZ1bmN0aW9uIGN1c3RvbWl6ZUhvbWVMaW5rSW5Mb2dvTWVudUl0ZW0gKCRtZW51SXRlbSwgJGFwcExvZ28pIHtcbiAgICB2YXIgJGhvbWVMaW5rID0gJCgnbGkgPiBhJywgJG1lbnVJdGVtKS5maXJzdCgpO1xuXG4gICAgcmV0dXJuICRob21lTGlua1xuICAgICAgLnRleHQoJ0hvbWUnKVxuICAgICAgLndyYXBJbm5lcignPHNwYW4gY2xhc3M9XCJtZW51bWFpbi1sYWJlbFwiPicpXG4gICAgICAucHJlcGVuZCgkYXBwTG9nbyk7XG4gIH1cblxuICAvKipcbiAgICogSW5qZWN0cyB0aGUgZ2l2ZW4gbWFya3VwIGluIGEgbWVudSB3cmFwcGVyIHdpdGggdGhlIGdpdmVuIGlkXG4gICAqIGNyZWF0ZWQgdG8gY29udGFpbiBib3RoIHRoZSBvcmlnaW5hbCBtZW51IGFuZCB0aGUgdXNlciBvbmVcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lbnVNYXJrdXBcbiAgICogQHBhcmFtIHtzdHJpbmd9IHdyYXBwZXJJZFxuICAgKi9cbiAgZnVuY3Rpb24gaW5qZWN0VXNlck1lbnVJbkFNYWluTWVudVdyYXBwZXIgKG1lbnVNYXJrdXAsIHdyYXBwZXJJZCkge1xuICAgIHZhciAkbWVudU1hcmt1cCA9ICQobWVudU1hcmt1cCk7XG4gICAgdmFyICRtZW51V3JhcHBlciA9ICQoJzxkaXY+Jyk7XG5cbiAgICAkbWVudVdyYXBwZXIuYXR0cignaWQnLCB3cmFwcGVySWQpO1xuICAgICRtZW51V3JhcHBlci5hcHBlbmQoJCgnI2Npdmljcm0tbWVudScpKTtcbiAgICAkbWVudVdyYXBwZXIuYXBwZW5kKCRtZW51TWFya3VwKTtcbiAgICAkbWVudVdyYXBwZXIuaW5zZXJ0QWZ0ZXIoJyNwYWdlJyk7XG4gIH1cblxuICAvKipcbiAgICogSW5zZXJ0IGEgRE9NIG5vZGUgYWZ0ZXIgaW5wdXRbdHlwZT1cImZpbGVcIl1cbiAgICogd2l0aCB0aGUgZmlsZW5hbWVcbiAgICovXG4gIGZ1bmN0aW9uIGluc2VydEZpbGUgKCkge1xuICAgIHZhciBmaWxlTmFtZSA9ICQodGhpcylbMF0uZmlsZXNbMF07XG5cbiAgICAkKCcjanMtdXBsb2FkZWQtZmlsZScpLnJlbW92ZSgpO1xuICAgIGlmIChmaWxlTmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAkKHRoaXMpLmFmdGVyKCc8c3BhbiBpZD1cImpzLXVwbG9hZGVkLWZpbGVcIiBjbGFzcz1cInVwbG9hZGVkLWZpbGVcIj4nICsgZmlsZU5hbWUubmFtZSArICcgPHNwYW4gY2xhc3M9XCJ1cGxvYWRlZC1maWxlLWljb24tdHJhc2hcIj48aSBjbGFzcz1cImZhIGZhLXRyYXNoLW9cIj48L2k+IFJlbW92ZTwvc3Bhbj4nKTtcblxuICAgICAgJCgnLnVwbG9hZGVkLWZpbGUtaWNvbi10cmFzaCcpLm9uKCdjbGljaycsIHJlbW92ZUZpbGUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgbGFiZWwgJ2ZvcicgYXR0ciB0byB3b3JrcyB3aXRoIHRoZSBkYXRlcGlja2VyXG4gICAqXG4gICAqIEBwYXJhbSAge2pRdWVyeSBvYmplY3R9ICRsaW5lIFtkYXRlcGlja2VyJ3MgbGluZSBwYXJlbnRdXG4gICAqL1xuICBmdW5jdGlvbiBsaW5rTGFiZWxUb0RhdGVwaWNrZXJJbnB1dCAoJGxpbmUpIHtcbiAgICAkbGluZS5maW5kKCdsYWJlbCcpLmF0dHIoJ2ZvcicsICRsaW5lLmZpbmQoJy5jcm0tZm9ybS1kYXRlJykuYXR0cignaWQnKSk7XG4gIH1cblxuICAvKipcbiAgICogTWFuaXB1bGF0ZXMsIGF0IHRoZSBET00gbGV2ZWwsIHRoZSBibG9ja3MvZmllbGRzIGJlbG9uZ2luZyB0byB0aGVcbiAgICogSW5saW5lIEN1c3RvbSBEYXRhIGN1c3RvbSBmaWVsZHMgc2V0XG4gICAqL1xuICBmdW5jdGlvbiBtYW5pcHVsYXRlRE9NT2ZJbmxpbmVDdXN0b21EYXRhICgpIHtcbiAgICBpZiAoJCgnLklubGluZV9DdXN0b21fRGF0YScpLmxlbmd0aCkge1xuICAgICAgcmVwb3NpdGlvbklubGluZUN1c3RvbURhdGFCbG9ja0luUGVyc29uYWxEZXRhaWxzVGFiKCk7XG4gICAgfVxuXG4gICAgaWYgKCQoJyNjdXN0b21GaWVsZHMnKS5sZW5ndGggPCAxKSB7XG4gICAgICByZXBvc2l0aW9uSW5saW5lQ3VzdG9tRGF0YUZpZWxkc0luRWRpdENvbnRhY3RGb3JtKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIE1pc2MgY2hhbmdlcyB0byB0aGUgcGFnZSAoaGlkaW5nIGVsZW1lbnRzLCBpbnNlcnRpbmcgbmV3IG9uZXMsIGV0YylcbiAgICovXG4gIGZ1bmN0aW9uIG1pc2NDb250YWN0UGFnZUNoYW5nZXMgKHRhcmdldCkge1xuICAgIC8vIEhpZGUgY3VycmVudCBlbXBsb3llciBhbmQgam9iIHRpdGxlXG4gICAgLy8gQ29udGFjdCBzdW1tYXJ5IHNjcmVlbjpcbiAgICAkKCdkaXYuY3JtLWNvbnRhY3QtY3VycmVudF9lbXBsb3llciwgZGl2LmNybS1jb250YWN0LWpvYl90aXRsZScsICcuY3JtLXN1bW1hcnktY29udGFjdGluZm8tYmxvY2snKS5wYXJlbnQoJ2Rpdi5jcm0tc3VtbWFyeS1yb3cnKS5oaWRlKCk7XG4gICAgLy8gSW5saW5lIGVkaXQgZm9ybVxuICAgICQoJ2Zvcm0jQ29udGFjdEluZm8gaW5wdXQjZW1wbG95ZXJfaWQsIGZvcm0jQ29udGFjdEluZm8gaW5wdXQjam9iX3RpdGxlJywgdGFyZ2V0KS5jbG9zZXN0KCdkaXYuY3JtLXN1bW1hcnktcm93JykuaGlkZSgpO1xuICAgIC8vIENvbnRhY3QgZWRpdCBzY3JlZW5cbiAgICAkKCdpbnB1dCNlbXBsb3llcl9pZCwgaW5wdXQjam9iX3RpdGxlJywgJ2Zvcm0jQ29udGFjdCcpLnBhcmVudCgndGQnKS5oaWRlKCk7XG5cbiAgICAvKiBDaGFuZ2VzIG9uIEFkZCBJbmRpdmlkdWFsIHBhZ2VzIGFuZCBQZXJzb25hbCBkZXRhaWxzIHRhYiBmb3IgSFItMzU4ICovXG4gICAgLy8gTW92ZSBKb2Igc3VtbWFyeSB0byB0b3BcbiAgICAkKCcuSFJKb2JDb250cmFjdF9TdW1tYXJ5JywgdGFyZ2V0KS5pbnNlcnRCZWZvcmUoJCgnLmNybS1zdW1tYXJ5LWNvbnRhY3RpbmZvLWJsb2NrJykpO1xuICAgIC8vIGNoYW5nZXMgb2YgZW1haWwgYmxvY2ssIHJlbW92ZSBidWxrbWFpbCBhbmQgb25ob2xkXG4gICAgJCgnZGl2LmVtYWlsLXNpZ25hdHVyZSwgdGQjRW1haWwtQnVsa21haWwtaHRtbCcsICdmb3JtI0NvbnRhY3QnKS5oaWRlKCk7XG4gICAgJCgnI0VtYWlsLVByaW1hcnknLCAnZm9ybSNDb250YWN0JykucHJldigndGQnKS5wcmV2KCd0ZCcpLmhpZGUoKTtcbiAgICAkKCd0ZCNFbWFpbC1CdWxrbWFpbC1odG1sLCAjRW1haWwtUHJpbWFyeScsICdmb3JtI0NvbnRhY3QnKS5wcmV2KCd0ZCcpLmhpZGUoKTtcblxuICAgIC8vIHNoaWZ0IGRlbW9ncmFwaGljIGFib3ZlIGV4dGVuZGVkIGRlbW9ncmFwaGljXG4gICAgJCgnLmNybS1kZW1vZ3JhcGhpY3MtYWNjb3JkaW9uJywgJ2Zvcm0jQ29udGFjdCcpLmluc2VydEFmdGVyKCQoJy5jcm0tY29udGFjdERldGFpbHMtYWNjb3JkaW9uJykpO1xuXG4gICAgaWYgKCQoJ3RyI1Bob25lX0Jsb2NrXzInLCAnZm9ybSNDb250YWN0JykubGVuZ3RoIDwgMSkge1xuICAgICAgJCgnI2FkZFBob25lJykuY2xpY2soKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHRoZSAjanMtdXBsb2FkZWQtZmlsZSBESVYgYW5kXG4gICAqIGNsZWFuIGlucHV0W3R5cGU9XCJmaWxlXCJdIHZhbHVlXG4gICAqL1xuICBmdW5jdGlvbiByZW1vdmVGaWxlICgpIHtcbiAgICB2YXIgJGlucHV0ID0gJCgnI2pzLXVwbG9hZGVkLWZpbGUnKS5wYXJlbnQoKS5maW5kKCdpbnB1dFt0eXBlPVwiZmlsZVwiXScpO1xuXG4gICAgJCgnI2pzLXVwbG9hZGVkLWZpbGUnKS5yZW1vdmUoKTtcbiAgICAkaW5wdXQudmFsKCcnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNb3ZlcyB0aGUgZ2l2ZW4gaG9tZSBsaW5rIHJpZ2h0IHVuZGVyIHRoZSBtZW51IGl0ZW0gYW5kIGdldHMgcmlkXG4gICAqIG9mIHRoZSBvcmlnaW5hbCBzdWIgbWVudVxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gJG1lbnVJdGVtIFRoZSBjb250ZXh0IHdoZXJlIHRvIGZpbmQgdGhlIGxpbmtcbiAgICogQHBhcmFtIHtvYmplY3R9ICRob21lTGlua1xuICAgKi9cbiAgZnVuY3Rpb24gcmVtb3ZlTG9nb1N1Yk1lbnVBbmRLZWVwT25seUhvbWVMaW5rICgkbWVudUl0ZW0sICRob21lTGluaykge1xuICAgICRtZW51SXRlbVxuICAgICAgLm9mZigpIC8vIHJlbW92ZXMgYW55IGhhbmRsZXIgdGhhdCB0aGUgb3JpZ2luYWwgaXRlbSBoYWRcbiAgICAgIC5maW5kKCcjY2l2aWNybS1ob21lJylcbiAgICAgIC5iZWZvcmUoJGhvbWVMaW5rKVxuICAgICAgLnJlbW92ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIE1vdmVzIHRoZSBcIklubGluZSBDdXN0b20gRGF0YVwiIGZpZWxkcyB0b3dhcmRzIHRoZSB0b3Agb2YgdGhlXG4gICAqIGVkaXQgY29udGFjdCBmb3JtXG4gICAqL1xuICBmdW5jdGlvbiByZXBvc2l0aW9uSW5saW5lQ3VzdG9tRGF0YUZpZWxkc0luRWRpdENvbnRhY3RGb3JtICgpIHtcbiAgICB2YXIgJGZpZWxkcyA9ICQoJyNJbmxpbmVfQ3VzdG9tX0RhdGEnKS5kZXRhY2goKTtcblxuICAgICRmaWVsZHMuZmluZCgnLmxhYmVsJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJGxhYmVsQ2VsbCA9ICQodGhpcyk7XG4gICAgICB2YXIgJGZpZWxkQ2VsbCA9ICRsYWJlbENlbGwubmV4dCgpO1xuICAgICAgdmFyICRuZXdUZCA9ICQoJzx0ZC8+Jyk7XG5cbiAgICAgICRuZXdUZC5hcHBlbmQoJGxhYmVsQ2VsbC5maW5kKCdsYWJlbCcpKTtcbiAgICAgICRuZXdUZC5hcHBlbmQoJCgnPGJyLz4nKSk7XG4gICAgICAkbmV3VGQuYXBwZW5kKCRmaWVsZENlbGwuaHRtbCgpKTtcblxuICAgICAgJCgnI25pY2tfbmFtZScpLnBhcmVudCgpLmFmdGVyKCRuZXdUZCk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogTW92ZXMgdGhlIFwiSW5saW5lIEN1c3RvbSBEYXRhXCIgYmxvY2sgdG93YXJkcyB0aGUgdG9wIG9mIHRoZVxuICAgKiBwZXJzb25hbCBkZXRhaWxzIHRhYlxuICAgKi9cbiAgZnVuY3Rpb24gcmVwb3NpdGlvbklubGluZUN1c3RvbURhdGFCbG9ja0luUGVyc29uYWxEZXRhaWxzVGFiICgpIHtcbiAgICAkKCcuSW5saW5lX0N1c3RvbV9EYXRhJylcbiAgICAgIC5yZW1vdmVDbGFzcygnY3JtLWNvbGxhcHNpYmxlIGNvbGxhcHNlZCcpXG4gICAgICAuYWRkQ2xhc3MoJ2NybS1zdW1tYXJ5LWJsb2NrJylcbiAgICAgIC5pbnNlcnRBZnRlcignLmNybS1zdW1tYXJ5LWNvbnRhY3RpbmZvLWJsb2NrJylcbiAgICAgIC5maW5kKCcuY29sbGFwc2libGUtdGl0bGUnKS5oaWRlKCkuZW5kKClcbiAgICAgIC5maW5kKCcuY3JtLXN1bW1hcnktYmxvY2snKS5zaG93KCk7XG4gIH1cblxuICAvKipcbiAgICogU3dhcHMgdGhlIENpdmlDUk0gbG9nbyB3aXRoIHRoZSBDaXZpSFIgbG9nb1xuICAgKiBhbmQgd3JhcHMgaXQgaW4gYSBgbWVudW1haW4taWNvbmAgZWxlbWVudFxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gJG1lbnVJdGVtIFRoZSBjb250ZXh0IHdoZXJlIHRvIGZpbmQgdGhlIGxvZ29cbiAgICogQHJldHVybiB0aGUgd3JhcHBlciBvZiB0aGUgbG9nb1xuICAgKi9cbiAgZnVuY3Rpb24gc3dhcEFuZFdyYXBBcHBMb2dvICgkbWVudUl0ZW0pIHtcbiAgICB2YXIgJGFwcExvZ28gPSAkKCcuY3JtLWxvZ28tc20nLCAkbWVudUl0ZW0pO1xuXG4gICAgcmV0dXJuICRhcHBMb2dvXG4gICAgICAuYWRkQ2xhc3MoJ2Nocl9sb2dvIGNocl9sb2dvLS1kZWZhdWx0LWNvbG9yJylcbiAgICAgIC5yZW1vdmVDbGFzcygnY3JtLWxvZ28tc20nKVxuICAgICAgLndyYXAoJzxzcGFuIGNsYXNzPVwibWVudW1haW4taWNvblwiPicpXG4gICAgICAucGFyZW50KCk7XG4gIH1cblxuICAvKipcbiAgICogQ2l2aUNSTSBieSBkZWZhdWx0IGFwcGxpZXMgb24gaG92ZXIgdGhlIC5hY3RpdmV0YXJnZXQgY2xhc3NcbiAgICogb25seSB0byBtYWluIG1lbnUgaXRlbXMgd2l0aCBhIHN1Ym1lbnVcbiAgICpcbiAgICogVGhpcyBmdW5jdGlvbnMgbWFrZXMgc3VyZSB0aGF0IGFueSBpdGVtIGdldHMgdGhlIGNsYXNzIGFwcGxpZWQsXG4gICAqIGV2ZW4gdGhvc2Ugd2l0aCBqdXN0IGEgZGlyZWN0IGxpbmtcbiAgICovXG4gIGZ1bmN0aW9uIHRvZ2dsZUFjdGl2ZUNsYXNzT25Ib3Zlck9uQW55TWFpbk1lbnVJdGVtICgpIHtcbiAgICB2YXIgY2xhc3NOYW1lID0gJ2FjdGl2ZXRhcmdldCc7XG5cbiAgICAkKCcubWVudW1haW4nKS5ub3QoJy5jcm0tU2VsZl9TZXJ2aWNlX1BvcnRhbCcpLmhvdmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICQodGhpcykuYWRkQ2xhc3MoY2xhc3NOYW1lKTtcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKGNsYXNzTmFtZSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBhcnJvdyBmb3IgbWVudSBpdGVtcyB3aXRoIHN1Yi1pdGVtcywgYW5kIHJlcGxhY2VzIGl0XG4gICAqIHdpdGggYSBmb250IGF3ZXNvbWUgY2FyZXRcbiAgICovXG4gIGZ1bmN0aW9uIHVzZUZvbnRBd2Vzb21lQXJyb3dzSW5TdWJNZW51SXRlbXMgKCkge1xuICAgICQoJyNyb290LW1lbnUtZGl2IC5tZW51LWl0ZW0tYXJyb3cnKS5lYWNoKGZ1bmN0aW9uICgkZWxlbWVudCkge1xuICAgICAgdmFyICRhcnJvdyA9ICQodGhpcyk7XG5cbiAgICAgICRhcnJvdy5iZWZvcmUoJzxpIGNsYXNzPVwiZmEgZmEtY2FyZXQtcmlnaHQgbWVudS1pdGVtLWFycm93XCI+PC9pPicpO1xuICAgICAgJGFycm93LnJlbW92ZSgpO1xuICAgIH0pO1xuICB9XG59KENSTS4kLCBDUk0uXykpO1xuIiwiKGZ1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgdmFyIE11dGF0aW9uT2JzZXJ2ZXIgPSB3aW5kb3cuTXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuV2ViS2l0TXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuTW96TXV0YXRpb25PYnNlcnZlcjtcblxuICAvKlxuICBUaGlzIHBsdWdpbiBjcmVhdGVzIE11dGF0aW9uT2JzZXJ2ZXIgd2hpY2ggbGlzdGVucyB0byBhbGwgY2hhbmdlcyB0byBET00gTm9kZS5cbiAgSWYgY2hhbmdlIGhhcyBiZWVuIGRvbmUgdG8gaXQncyBhdHRyaWJ1dGVzIGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkLlxuXG4gIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIC0gdG8gYmUgY2FsbGVkIHdoZW4gYXR0cmlidXRlcyBjaGFuZ2VcbiAgQHJldHVybnMge0FycmF5fSAtIGxpc3Qgb2YgYWxsIG9ic2VydmVkIGVsZW1lbnRzXG4gICovXG4gICQuZm4uYXR0cmNoYW5nZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIGlmIChNdXRhdGlvbk9ic2VydmVyKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgc3VidHJlZTogZmFsc2UsXG4gICAgICAgIGF0dHJpYnV0ZXM6IHRydWVcbiAgICAgIH07XG5cbiAgICAgIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHtcbiAgICAgICAgbXV0YXRpb25zLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBjYWxsYmFjay5jYWxsKGUudGFyZ2V0LCBlKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIG9ic2VydmVyLm9ic2VydmUodGhpcywgb3B0aW9ucyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn0pKENSTS4kKTtcbiIsIi8qIGdsb2JhbHMgQ1JNICovXG5cbi8qKlxuICogSGVscHMgdG8gZGlzcGxheSBwb3B1cCBtZW51cyBpbnNpZGUgI2Jvb3RzdHJhcC10aGVtZSBlbGVtZW50cywgc2luY2UgLnBhbmVsJ3NcbiAqIGFuZCBvdGhlciBCb290c3RyYXAgZWxlbWVudHMgY2xhc2ggd2l0aCBDaXZpQ1JNIHN0eWxlcyBwcm9kdWNpbmcgdW5kZXNpcmVkXG4gKiByZXN1bHRzLlxuICpcbiAqIEl0IGFsc28gaGVscHMgd2l0aCBldmVudCBiaW5kaW5ncywgaW4gY2FzZSB0aGUgb3JpZ2luYWwgcG9wdXAgYnV0dG9uIHdhc1xuICogcmVtb3ZlZCBhbmQgcmVjcmVhdGVkLCBieSBmb3J3YXJkaW5nIHRoZSBldmVudHMgdG8gdGhlIG9yaWdpbmFsIHNvdXJjZS5cbiAqL1xuKGZ1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgdmFyICRib2R5ID0gJCgnYm9keScpO1xuXG4gICRib2R5Lm9uKCdjbGljaycsICcjYm9vdHN0cmFwLXRoZW1lIC5idG4tc2xpZGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICRwb3B1cENsb25lO1xuICAgIHZhciAkYnV0dG9uID0gJCh0aGlzKTtcbiAgICB2YXIgJHBvcHVwID0gJGJ1dHRvbi5jaGlsZHJlbigndWwucGFuZWwnKTtcblxuICAgIChmdW5jdGlvbiBpbml0ICgpIHtcbiAgICAgIGNsb3NlUG9wdXBQYW5lbHMoKTtcbiAgICAgIGNyZWF0ZVBvcHVwQ2xvbmUoKTtcbiAgICAgIG9wZW5Qb3B1cENsb25lKCk7XG4gICAgICBtYXBDbG9uZUNsaWNrRXZlbnRzVG9PcmlnaW4oKTtcbiAgICAgIGxpc3RlblRvTW91c2VPdXRFdmVudCgpO1xuICAgIH0pKCk7XG5cbiAgICAvKipcbiAgICAgKiBDbG9zZXMgdGhlIGFueSBwb3B1cCBwYW5lbCB0aGF0IGlzIGN1cnJlbnRseSBvcGVuIGFuZCByZW1vdmVzIHRoZVxuICAgICAqIGAuY2l2aWhyLXBvcHVwLW9wZW5gIGNsYXNzIGZyb20gdGhlIGJvZHkuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY2xvc2VQb3B1cFBhbmVscyAoKSB7XG4gICAgICAkKCcuY2l2aWhyLXBvcHVwJykucmVtb3ZlKCk7XG4gICAgICAkYm9keS5yZW1vdmVDbGFzcygnY2l2aWhyLXBvcHVwLW9wZW4nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgY2xvbmUgb2YgdGhlIHBvcHVwIGVsZW1lbnQgYW5kIGFwcGVuZHMgaXQgdG8gdGhlIGRvY3VtZW50IGJvZHkuXG4gICAgICogVGhpcyBwcmV2ZW50cyB0aGUgcG9wdXAgdG8gYmUgaGlkZGVuIGJ5IGFueSBgb3ZlcmZsb3c6IGhpZGRlbjtgIHJ1bGUuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlUG9wdXBDbG9uZSAoKSB7XG4gICAgICAkcG9wdXBDbG9uZSA9ICRwb3B1cC5jbG9uZSh0cnVlKVxuICAgICAgICAuYXBwZW5kVG8oJGJvZHkpXG4gICAgICAgIC5hZGRDbGFzcygnY2l2aWhyLXBvcHVwJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTGlzdGVucyB0byBtb3VzZSBldmVudHMgaGFwcGVuaW5nIG91dHNpZGUgdGhlIG9mIHRoZSBwYW5lbCBpbiBvcmRlciB0b1xuICAgICAqIGNsb3NlIGl0LiBUaGUgd2F5IHRvIGRldGVjdGVkIG1vdXNlIG91dCBpcyBieSBsaXN0ZW5pbmcgdG8gdGhlXG4gICAgICogLmJ0bi1zbGlkZS1hY3RpdmUgY2xhc3MgY2hhbmdlLCB3aGljaCBpcyBhZGRlZCBhbmQgcmVtb3ZlZCBieSBDaXZpQ1JNLlxuICAgICAqIHRoZSBkYXRhICphdHRyY2hhbmdlLWlzLW9uKiBpcyBzZXQgdG8gdHJ1ZSBpbiBvcmRlciB0byBhdm9pZCBhZGRpbmdcbiAgICAgKiBtdWx0aXBsZSBsaXN0ZW5lcnMgdG8gdGhlIHNhbWUgZWxlbWVudC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBsaXN0ZW5Ub01vdXNlT3V0RXZlbnQgKCkge1xuICAgICAgLy8gSWYgQXR0ckNoYW5nZSBldmVudCBpcyBhbHJlYWR5IGxpc3RlbmVkLCB0aGVuIHNraXA6XG4gICAgICBpZiAoJGJ1dHRvbi5kYXRhKCdhdHRyY2hhbmdlLWlzLW9uJykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAkYnV0dG9uLmRhdGEoJ2F0dHJjaGFuZ2UtaXMtb24nLCB0cnVlKTtcbiAgICAgICRidXR0b24uYXR0cmNoYW5nZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIElmIGJ1dHRvbiBpcyBhbHJlYWR5IG9wZW4sIHRoZW4gc2tpcDpcbiAgICAgICAgaWYgKCRidXR0b24uaGFzQ2xhc3MoJ2J0bi1zbGlkZS1hY3RpdmUnKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNsb3NlUG9wdXBQYW5lbHMoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1hcHMgY2xpY2sgZXZlbnRzIG9uIHRoZSBwb3B1cCBvcHRpb25zIGJhY2sgdG8gdGhlaXIgb3JpZ2luYWwgc291cmNlLlxuICAgICAqIFRoaXMgaXMgZG9uZSBiZWNhdXNlIHBvcHVwIGFjdGlvbnMgYXJlIGV4ZWN1dGVkIGFzIGRlbGVnYXRlZCBldmVudHMgYW5kXG4gICAgICogdGhlIGxpc3RlbmVyIGlzIG5vdCB0aGUgKmJvZHkqIGVsZW1lbnQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gbWFwQ2xvbmVDbGlja0V2ZW50c1RvT3JpZ2luICgpIHtcbiAgICAgICRwb3B1cENsb25lLmZpbmQoJ2EnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhY3Rpb25JbmRleCA9ICQodGhpcykucGFyZW50KCkuaW5kZXgoKTtcblxuICAgICAgICAkcG9wdXAuZmluZCgnbGk6bnRoKCcgKyBhY3Rpb25JbmRleCArICcpIGEnKS5jbGljaygpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3BlbnMgdGhlIHBvcHVwIHBhbmVsIGNsb25lXG4gICAgICogYW5kIGFkZHMgdGhlIC5jaXZpaHItcG9wdXAtb3BlbiBjbGFzcyB0byB0aGUgYm9keVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG9wZW5Qb3B1cENsb25lICgpIHtcbiAgICAgIHZhciBidXR0b25PZmZzZXQgPSAkYnV0dG9uLm9mZnNldCgpO1xuXG4gICAgICAkcG9wdXBDbG9uZS5jc3Moe1xuICAgICAgICBsZWZ0OiArYnV0dG9uT2Zmc2V0LmxlZnQgLSAoJHBvcHVwQ2xvbmUud2lkdGgoKSAtICRidXR0b24ub3V0ZXJXaWR0aCgpKSxcbiAgICAgICAgdG9wOiArYnV0dG9uT2Zmc2V0LnRvcCArICRidXR0b24ub3V0ZXJIZWlnaHQoKVxuICAgICAgfSk7XG4gICAgICAkcG9wdXBDbG9uZS5zaG93KCk7XG4gICAgICAkYm9keS5hZGRDbGFzcygnY2l2aWhyLXBvcHVwLW9wZW4nKTtcbiAgICB9XG4gIH0pO1xufSkoQ1JNLiQpO1xuIl19
