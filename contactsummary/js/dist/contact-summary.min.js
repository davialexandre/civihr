define("contact-summary/modules/contact-summary.config",["common/angular"],function(e){"use strict";function t(e,t,n,a,s){s.debugEnabled(e.debug),t.when("/",{controller:"ContactSummaryController",controllerAs:"ContactSummaryCtrl",templateUrl:e.pathBaseUrl+e.pathTpl+"mainTemplate.html",resolve:{}}).otherwise({redirectTo:"/"}),n.defaults.stripTrailingSlashes=!1,a.defaults.headers.common["X-Requested-With"]="XMLHttpRequest"}e.module("contactsummary.config",["contactsummary.constants"]).config(t),t.$inject=["settings","$routeProvider","$resourceProvider","$httpProvider","$logProvider"]}),define("contact-summary/modules/contact-summary.constants",["common/angular"],function(e){"use strict";e.module("contactsummary.constants",[]).constant("settings",{classNamePrefix:"contactSummary-",contactId:decodeURIComponent((new RegExp("[?|&]cid=([^&;]+?)(&|#|;|$)").exec(location.search)||[null,""])[1].replace(/\+/g,"%20"))||null,debug:!0,pathApp:"",pathRest:CRM.url("civicrm/ajax/rest"),pathBaseUrl:CRM.vars.contactsummary.baseURL+"/",pathTpl:"views/",CRM:{options:CRM.FieldOptions||{}}})}),define("contact-summary/controllers/contact-summary.controller",[],function(){"use strict";function e(e,t){e.debug("Controller: ContactSummaryController");var n=t.pathBaseUrl+t.pathTpl,a=this;a.contactId=t.contactId,a.ready=!1,a.partials={keyDetails:n+"/include/keyDetails.html",keyDates:n+"/include/keyDates.html"}}return e.__name="ContactSummaryController",e.$inject=["$log","settings"],e}),define("contact-summary/controllers/key-dates.controller",["common/angular","common/lodash","common/moment"],function(e,t,n){"use strict";function a(a,s,r,o){function i(e){m.dates.push({title:e.title+" (Start)",date:e.start_date,future:u(e.start_date)}),e.end_date&&m.dates.push({title:e.title+" (End)",date:e.end_date,future:u(e.end_date)})}function c(){l(),s.get().then(function(n){return t.isEmpty(n)||e.forEach(n,function(e){i(e),"1"===e.is_current&&m.activeContracts++}),r.get()}).then(function(t){e.forEach(t,function(e){var t=n(e.end_date);(void 0===e.end_date||t.isValid()&&u(t))&&m.activeRoles++})}).finally(function(){m.ready=!0})}function u(e){return n().diff(e,"days")<=0}function l(){m.activeContracts=0,m.activeRoles=0,m.dates=[]}function d(){a.debug("Subcsribers initialiazed!"),["Contract::created","Contract::updated","JobRole::created","JobRole::updated","JobRole::deleted"].forEach(function(e){o.subscribe(e,c)}),o.subscribe("Contract::deleted",function(e){s.removeContract(e),c()})}a.debug("Controller: KeyDatesController");var m=this;m.dates=[],m.activeContracts=0,m.activeRoles=0,m.ready=!1,function(){c(),d()}()}return a.__name="KeyDatesController",a.$inject=["$log","contractService","jobRoleService","pubSub"],a}),define("contact-summary/controllers/key-details.controller",["common/lodash","common/moment"],function(e,t){"use strict";function n(t,n,a,s){function r(){n.get().then(function(e){return u.contactDetails=e,a.getCurrent()}).then(function(t){if(e.isEmpty(t))return void(u.primaryContract=null);u.primaryContract=t}).then(function(e){return a.getLengthOfService()}).then(function(e){u.lengthOfService=e}).finally(function(){u.ready=!0})}function o(){u.options=a.getOptions()}function i(){s.subscribe("Contract::deleted",c)}function c(){a.resetContracts(),n.data.item={},r()}t.debug("Controller: KeyDetailsController");var u=this;u.ready=!1,u.options={},function(){o(),r(),i()}()}return n.__name="KeyDetailsController",n.$inject=["$log","contactDetailsService","contractService","pubSub"],n}),define("contact-summary/modules/contact-summary.controllers",["common/angular","contact-summary/controllers/contact-summary.controller","contact-summary/controllers/key-dates.controller","contact-summary/controllers/key-details.controller"],function(e,t,n,a){"use strict";e.module("contactsummary.controllers",[]).controller(t.__name,t).controller(n.__name,n).controller(a.__name,a)}),define("contact-summary/modules/contact-summary.core",["common/angular","common/services/pub-sub"],function(e){"use strict";e.module("contactsummary.core",["ngRoute","ngResource","ui.bootstrap","common.services"])}),define("contact-summary/directives/donut-chart.directive",["common/angular","common/d3"],function(e,t){"use strict";function n(e){this.height=this.width=e[0].clientWidth,this.radius=this.width/2||60,this.thickness=this.thickness||15}function a(){return t.svg.arc().innerRadius(this.radius-this.thickness).outerRadius(this.radius)}function s(e,n,a){var s=t.scale.category20();return e.selectAll("path").data(a).enter().append("path").attr("fill",function(e,t){return s(t)}).attr("class",function(e,t){return"chart-color-"+t}).attr("d",n)}function r(){return t.layout.pie().sort(null).value(function(e){return e.value[this.itemKey]}.bind(this))(t.entries(this.items))}function o(e){return t.select(e).append("svg").attr("width",this.width).attr("height",this.height).append("g").attr("transform","translate("+this.width/2+","+this.height/2+")")}function i(t){return t.debug("Directive: csDonutChart"),{controllerAs:"CsDonutChartCtrl",restrict:"AE",scope:{radius:"@",thickness:"@",items:"=",itemKey:"@",ready:"="},controller:["$scope","$element",function(t,i){this.drawChart=function(){n.call(e.extend(this,t),i),s(o.call(this,i[0]),a.call(this),r.call(this))}}],link:function(e,t,n,a){var s=e.$watch(function(){return e.ready},function(e,t){!0===e&&(a.drawChart(),s())})}}}return i.__name="csDonutChart",i.$inject=["$log"],i}),define("contact-summary/modules/contact-summary.directives",["common/angular","contact-summary/directives/donut-chart.directive"],function(e,t){"use strict";e.module("contactsummary.directives",[]).directive(t.__name,t)}),define("contact-summary/modules/contact-summary.run",["common/angular"],function(e){"use strict";function t(e,t,n,a){a.debug("app.run"),t.pathTpl=e.pathTpl,t.prefix=e.classNamePrefix}e.module("contactsummary.run",["contactsummary.constants"]).run(t),t.$inject=["settings","$rootScope","$q","$log"]}),function(e){define("contact-summary/services/api.service",["common/angular"],function(t){"use strict";function n(n,a){function s(n,a,s,r){if(!t.isDefined(n))throw new Error("Entity name not provided");if(!t.isDefined(s))throw new Error("Action not provided");return a=t.extend({entity:n,action:s,sequential:1,json:1,rowCount:0},a),r?e.param(a):a}function r(e,t,n){return i("get",s(e,t,"get"),n)}function o(e,n,a,r){return r=t.extend({headers:{"Content-Type":"application/x-www-form-urlencoded"}},r),i("post",s(e,n,a,!0),r)}function i(e,s,r){return r=t.extend({method:e,url:"/civicrm/ajax/rest"},"post"===e?{data:s}:{params:s},r),n(r).then(function(e){return e.is_error?a.reject(e):e.data}).catch(function(e){return e})}return{get:r,post:o}}return n.__name="apiService",n.$inject=["$http","$q"],n})}(CRM.$),define("contact-summary/services/contact-details.service",["common/lodash","common/moment"],function(e,t){"use strict";function n(n,a,s,r,o){function i(){var e=n.defer();return u().then(function(){e.resolve(l.getData())}),e.promise}function c(e){return t().diff(t(e,"YYYY-MM-DD"),"years")}function u(){var a=n.defer();if(e.isEmpty(l.getData())){var r=o.contactId;s.get("Contact",{contact_id:r,return:"birth_date"}).then(function(e){if(0===e.values.length)throw new Error("Contact with ID "+r+" not found");var n=e.values[0].birth_date,s=t(n,"YYYY-MM-DD").isValid()?c(n):"";l.setDataKey("id",r),l.setDataKey("dateOfBirth",n),l.setDataKey("age",s),a.resolve()}).catch(function(e){a.reject(e)})}else a.resolve();return a.promise}a.debug("Service: contactDetailsService");var l=r.createInstance();return l.get=i,l}return n.__name="contactDetailsService",n.$inject=["$q","$log","apiService","modelService","settings"],n}),define("contact-summary/services/contact.service",["common/lodash"],function(e){"use strict";function t(t,n,a,s,r){function o(){return i().then(function(){return l.getData()})}function i(){var t=n.defer();return e.isEmpty(l.getData())?c().then(u).then(function(){t.resolve()}):t.resolve(),t.promise}function c(){return s.get().then(function(e){l.setDataKey("id",e.id),l.setDataKey("dateOfBirth",e.dateOfBirth),l.setDataKey("age",e.age)})}function u(){return r.get().then(function(e){l.setDataKey("contract",e)})}t.debug("Service: contactService");var l=a.createInstance();return l.get=o,l}return t.__name="contactService",t.$inject=["$log","$q","modelService","contactDetailsService","contractService"],t}),define("contact-summary/services/contract.service",["common/angular","common/lodash"],function(e,t){"use strict";function n(n,s,r,o,i,c){function u(){return c.get().then(function(e){var t={contact_id:e.id,"api.HRJobContractRevision.getcurrentrevision":{jobcontract_id:"$value.id"}};return o.get("HRJobContract",t)})}function l(e){return e.values.filter(function(e){return 0===parseInt(e.deleted)})}function d(){var t=[];return e.forEach(q,function(e){var n=A.getContractDetails(e.id).then(function(t){var n=e.api_HRJobContractRevision_getcurrentrevision;return{id:e.id,is_primary:e.is_primary,is_current:e.is_current,revision_id:n?n.values.id:null,title:t.title,start_date:t.period_start_date,end_date:t.period_end_date,type:t.contract_type,pay:t.pay,hours:t.hours}}).then(function(t){A.collection.insertItem(e.id,t)});t.push(n)}),n.all(t).catch(function(e){s.error("Something went wrong",e)})}function m(){return y().then(function(){return A.getCollection()})}function f(){return A.collection.get()}function v(){return t.isEmpty(q)?u().then(function(e){return q=l(e)}):n.resolve(q)}function h(e){var t=function(e){var t=e.api_HRJobPay_get.values,n={};0!==t.length&&(n.amount=t[0].pay_amount,n.currency=t[0].pay_currency),e.pay=n},s=function(e){var t=e.api_HRJobHour_get.values,n={};0!==t.length&&(n.amount=t[0].hours_amount,n.unit=t[0].hours_unit),e.hours=n},r="getContractDetails_"+e,i={jobcontract_id:e,"api.HRJobPay.get":{jobcontract_id:e},"api.HRJobHour.get":{jobcontract_id:e}};return a[r]||(a[r]=o.post("HRJobDetails",i,"get").then(function(a){if(0===a.values.length)return n.reject("No details found for contract revision with ID "+e);var r=a.values[0];return t(r),s(r),r})),a[r]}function p(){var e=n.defer();return c.get().then(function(e){return o.post("HRJobContract",{sequential:0,contact_id:e.id},"getlengthofserviceymd")}).then(function(t){t.is_error?e.reject(t):e.resolve(t.values)}).catch(function(t){e.reject(t)}),e.promise}function g(e){var t=r.CRM.options.HRJobDetails||{};return"string"==typeof e&&(t=t[e]),{details:t}}function b(){return A.get().then(function(e){var n=t.sortBy(e,function(e){return[e.is_current]});return t.last(n)||{}})}function y(){return A.getContracts().then(d)}function _(){A.collection={items:{},insertItem:function(e,t){this.items[e]=t},getItem:function(e){return this.items[e]},set:function(e){this.items=e},get:function(){return this.items},remove:function(e){delete this.items[e]}}}function R(){q=[],a={},_()}function C(e){t.remove(q,{id:e.contractId}),A.collection.remove(e.contractId)}s.debug("Service: Contract Service");var q=[],A={};return A.get=m,A.getCollection=f,A.getContracts=v,A.removeContract=C,A.getContractDetails=h,A.getLengthOfService=p,A.getOptions=g,A.getCurrent=b,A.resetContracts=R,_(),A}var a={};return n.__name="contractService",n.$inject=["$q","$log","settings","apiService","modelService","contactDetailsService"],n}),define("contact-summary/services/item.service",["common/angular","common/lodash","common/moment"],function(e,t,n){"use strict";function a(){function t(){var e=Object.create(r);return e.item={},e}function n(){return this.item}function a(t){if(!e.isObject(t))throw new TypeError("Data must be of type Object");this.item=t}function s(e,t){this.item[e]=t}var r={};return r.createInstance=t,r.get=n,r.set=a,r.setKey=s,r}return a.__name="itemService",a}),define("contact-summary/services/job-role.service",["common/angular","common/lodash"],function(e,t){"use strict";function n(t,n,a,s,r){function o(){return c().then(function(){return u.getCollection()})}function i(){return u.collection.get()}function c(){var n=t.defer();return r.get().then(function(s){var r=[];if(e.forEach(s,function(e){r.push(e.id)}),0===r.length)return t.reject("No job roles found for contracts");a.post("HrJobRoles",{job_contract_id:{IN:r}},"get").then(function(e){var t=e.values.map(function(e){return{id:e.id,title:e.title,department:e.department,status:e.status,start_date:e.start_date,end_date:e.end_date}});u.collection.set(t)}).finally(function(){n.resolve()})}),n.promise}n.debug("Service: jobRoleService");var u={};return u.collection={items:{},insertItem:function(e,t){this.items[e]=t},getItem:function(e){return this.items[e]},set:function(e){this.items=e},get:function(){return this.items}},u.get=o,u.getCollection=i,u}return n.__name="jobRoleService",n.$inject=["$q","$log","apiService","modelService","contractService"],n}),define("contact-summary/services/leave.service",["common/angular","common/lodash","common/moment"],function(e,t,n){"use strict";function a(a,r,o,i,c,u){function l(t){var n=S.collection.getItem(t)||{};e.forEach(D,function(e){if("1"===e.is_active){var t=e.id;n.hasOwnProperty(t)||(n[t]={}),n[t].type_id=t,n[t].title=e.title,n[t].credit_activity_type_id=e.credit_activity_type_id?e.credit_activity_type_id:null,n[t].debit_activity_type_id=e.debit_activity_type_id?e.debit_activity_type_id:null,n[t].entitled=0,n[t].taken=0}}),S.collection.insertItem(t,n)}function d(t){var n=S.collection.getItem(t),a={};e.forEach(D,function(e){e.credit_activity_type_id&&(a[e.credit_activity_type_id]=e.id),e.debit_activity_type_id&&(a[e.debit_activity_type_id]=e.id)}),e.forEach(P,function(e){var t;if(a.hasOwnProperty(e.activity_type_id)&&(t=a[e.activity_type_id]),t){if(!n.hasOwnProperty(t))return;var s=Math.ceil(e.absence_range.approved_duration/60),r=+(s/8).toFixed(1);"toil"===n[t].title.toLowerCase()&&e.activity_type_id===n[t].credit_activity_type_id?n[t].entitled+=r:n[t].taken+=r}}),S.collection.insertItem(t,n)}function m(t){var n=S.collection.getItem(t);e.forEach(L,function(e){var t=e.type_id;n.hasOwnProperty(t)&&"toil"!==n[t].title.toLowerCase()&&(n[t].entitled=+e.amount)}),S.collection.insertItem(t,n)}function f(e){l(e),m(e),d(e)}function v(){return w(void 0).then(function(){return S.getData()})}function h(){var e=a.defer();return t.isEmpty(D)?i.get("HRAbsenceType").then(function(t){if(0===t.values.length)throw new Error("No absence type not found");D=t.values,e.resolve(D)}):e.resolve(D),e.promise}function p(e){var n=a.defer();return u.get().then(function(t){var n={target_contact_id:t.id,period_id:[e],options:{"absence-range":1},sequential:0};return i.post("Activity",n,"getabsences")}).then(function(e){P=t.filter(e.values,function(e){return"2"===e.status_id}),n.resolve(P)}),n.promise}function g(){return S.collection.get()}function b(){var e,t=a.defer();return s.getCurrent||(S.getCurrentPeriod().then(function(n){n.hasOwnProperty("id")?(e=n.id,w(e).then(function(){t.resolve(S.collection.getItem(e))})):t.resolve({})}),s.getCurrent=t.promise),s.getCurrent}function y(){return C().then(function(e){for(var t={},a=n(),s=0;s<e.length;s++){var r=n(e[s].start_date,"YYYY-MM-DD HH:mm:ss"),o=n(e[s].end_date,"YYYY-MM-DD HH:mm:ss");a.diff(r)>=0&&a.diff(o)<=0&&(t=e[s])}return t})}function _(){}function R(e){var t=a.defer();return u.get().then(function(t){var n={contact_id:t.id,period_id:e,options:{"absence-range":1}};return i.get("HRAbsenceEntitlement",n)}).then(function(e){L=e.values,t.resolve(L)}),t.promise}function C(){var e=a.defer();return t.isEmpty(T)?i.get("HRAbsencePeriod").then(function(t){if(0===t.values.length)return e.reject("No absence periods found");T=t.values,T=o("orderBy")(T,"start_date"),e.resolve(T)}).catch(function(t){r.debug("An error has occurred",t),e.reject(t)}):e.resolve(T),e.promise}function q(){var e,t=a.defer();return A().then(function(n){n.hasOwnProperty("id")?(e=n.id,w(e).then(function(){t.resolve(S.collection.getItem(e))})):t.resolve({})}),t.promise}function A(){var e,t={};return S.getCurrentPeriod().then(function(t){return e=t,C()}).then(function(n){var a=n.indexOf(e);return-1!==a&&a>0&&(t=n[a-1]),t})}function I(e){var t=a.defer();return S.getCurrentPeriod().then(function(n){if(n.hasOwnProperty("id")){var s=n.id;i.post("ContactSummary",{absence_types:e,period_id:s},"getabsenceaggregate").then(function(e){if(0===e.values.length)return a.reject("Staff average not returned");var n=Math.ceil(e.values[0].result/60),s=+(n/8).toFixed(1);t.resolve(s)})}else t.resolve(0)}),t.promise}function w(e){var n=a.defer();return t.isEmpty(S.collection.getItem(e))?S.getAbsenceTypes().then(function(){return S.getAbsences(e)}).then(function(){return S.getEntitlement(e)}).then(function(){return f(e)}).then(function(){n.resolve()}).catch(function(e){r.debug("An error has occurred",e),n.reject(e)}):n.resolve(),n.promise}r.debug("Service: leaveService");var P,L,T,D=[],S={};return S.collection={items:{},insertItem:function(e,t){this.items[e]=t},getItem:function(e){return this.items[e]},set:function(e){this.items=e},get:function(){return this.items}},S.get=v,S.getAbsenceTypes=h,S.getAbsences=p,S.getCollection=g,S.getCurrent=b,S.getCurrentPeriod=y,S.getDepartmentAverage=_,S.getEntitlement=R,S.getPrevious=q,S.getStaffAverage=I,S}var s={};return a.__name="leaveService",a.$inject=["$q","$log","$filter","apiService","modelService","contactDetailsService"],a}),define("contact-summary/services/model.service",["common/lodash","contact-summary/modules/contact-summary.services"],function(e,t){"use strict";function n(e){function t(){var t=Object.create(r);return t.data=e.createInstance(),t}function n(){return this.data.get()}function a(e){this.data.set(e)}function s(e,t){this.data.setKey(e,t)}var r={};return r.data={},r.createInstance=t,r.getData=n,r.setData=a,r.setDataKey=s,r}return n.__name="modelService",n.$inject=["itemService"],n}),define("contact-summary/modules/contact-summary.services",["common/angular","contact-summary/services/api.service","contact-summary/services/contact-details.service","contact-summary/services/contact.service","contact-summary/services/contract.service","contact-summary/services/item.service","contact-summary/services/job-role.service","contact-summary/services/leave.service","contact-summary/services/model.service"],function(e,t,n,a,s,r,o,i,c){"use strict";e.module("contactsummary.services",[]).factory(t.__name,t).factory(n.__name,n).factory(a.__name,a).factory(s.__name,s).factory(r.__name,r).factory(o.__name,o).factory(i.__name,i).factory(c.__name,c)}),function(e){define("leave-absences/shared/modules/shared-settings",["common/angular"],function(t){return t.module("leave-absences.settings",[]).constant("shared-settings",{attachmentToken:e.vars.leaveAndAbsences.attachmentToken,debug:e.debug,managerPathTpl:e.vars.leaveAndAbsences.baseURL+"/views/manager-leave/",sharedPathTpl:e.vars.leaveAndAbsences.baseURL+"/views/shared/",sourcePath:e.vars.leaveAndAbsences.baseURL+"/js/angular/src/leave-absences/",serverDateFormat:"YYYY-MM-DD",serverDateTimeFormat:"YYYY-MM-DD HH:mm:ss",permissions:{admin:{access:"access leave and absences",administer:"administer leave and absences"},ssp:{access:"access leave and absences in ssp",manage:"manage leave and absences in ssp"}},fileUploader:{queueLimit:10},statusNames:{approved:"approved",adminApproved:"admin_approved",awaitingApproval:"awaiting_approval",moreInformationRequired:"more_information_required",rejected:"rejected",cancelled:"cancelled"}})})}(CRM),define("leave-absences/shared/modules/apis",["common/angular","common/modules/apis","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.apis",["common.apis","leave-absences.settings"])}),define("leave-absences/shared/modules/models-instances",["common/angular","common/models/instances/instance","common/modules/services","common/modules/models","common/services/check-permissions","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.models.instances",["common.models","common.models.instances","common.services","leave-absences.settings"])}),define("leave-absences/shared/modules/models",["common/angular","common/modules/models","common/modules/services","leave-absences/shared/modules/apis","leave-absences/shared/modules/models-instances","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.models",["common.models","common.services","leave-absences.apis","leave-absences.models.instances","leave-absences.settings"])}),define("leave-absences/shared/modules/components",["common/angular","common/modules/directives","common/modules/models","leave-absences/shared/modules/shared-settings","leave-absences/shared/modules/models"],function(e){return e.module("leave-absences.components",["common.directives","common.models","leave-absences.settings","leave-absences.models"])}),define("leave-absences/shared/instances/absence-period.instance",["leave-absences/shared/modules/models-instances","common/moment","common/models/instances/instance","common/services/hr-settings"],function(e,t){"use strict";e.factory("AbsencePeriodInstance",["$log","ModelInstance","HR_settings",function(e,n,a){return e.debug("AbsencePeriodInstance"),n.extend({defaultCustomData:function(){return{current:!1}},transformAttributes:function(e){var n=t();return e.current=!1,t(e.start_date).isSameOrBefore(n,"day")&&t(e.end_date).isSameOrAfter(n,"day")&&(e.current=!0),e},isInPeriod:function(e){var n=a.DATE_FORMAT.toUpperCase(),s=t(e,n);return t(this.start_date).isSameOrBefore(s)&&t(this.end_date).isSameOrAfter(s)}})}])}),define("leave-absences/shared/apis/absence-period.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("AbsencePeriodAPI",["$log","api",function(e,t){return e.debug("AbsencePeriodAPI"),t.extend({all:function(t){return e.debug("AbsencePeriodAPI"),this.sendGET("AbsencePeriod","get",t).then(function(e){return e.values})}})}])}),define("leave-absences/shared/models/absence-period.model",["leave-absences/shared/modules/models","common/moment","leave-absences/shared/modules/shared-settings","leave-absences/shared/instances/absence-period.instance","leave-absences/shared/apis/absence-period.api","common/models/model","common/services/hr-settings"],function(e,t){"use strict";e.factory("AbsencePeriod",["$log","Model","AbsencePeriodAPI","AbsencePeriodInstance","shared-settings",function(e,n,a,s,r){return e.debug("AbsencePeriod"),n.extend({all:function(e){return a.all(e).then(function(e){return e.map(function(e){return s.init(e,!0)})})},current:function(){var e=t().format(r.serverDateFormat),n={start_date:{"<=":e},end_date:{">=":e}};return a.all(n).then(function(e){return e&&e.length?s.init(e[0],!0):null})}})}])}),define("leave-absences/shared/apis/absence-type.api",["common/lodash","common/moment","leave-absences/shared/modules/apis","common/services/api"],function(e,t,n){"use strict";n.factory("AbsenceTypeAPI",["$log","api","shared-settings",function(n,a,s){return n.debug("AbsenceTypeAPI"),a.extend({all:function(t){return n.debug("AbsenceTypeAPI.all"),this.sendGET("AbsenceType","get",e.defaultsDeep(t||{},{is_active:!0,options:{sort:"weight ASC"}})).then(function(e){return e.values})},calculateToilExpiryDate:function(a,r,o){return n.debug("AbsenceTypeAPI.calculateToilExpiryDate"),o=e.assign({},o,{absence_type_id:a,date:t(r).format(s.serverDateFormat)}),this.sendPOST("AbsenceType","calculateToilExpiryDate",o).then(function(e){return e.values.expiry_date})}})}])}),define("leave-absences/shared/instances/absence-type.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("AbsenceTypeInstance",["$log","ModelInstance",function(e,t){return e.debug("AbsenceTypeInstance"),t.extend({})}])}),define("leave-absences/shared/models/absence-type.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","common/models/option-group","leave-absences/shared/apis/absence-type.api","leave-absences/shared/instances/absence-type.instance"],function(e,t){"use strict";t.factory("AbsenceType",["$log","$q","Model","OptionGroup","AbsenceTypeAPI","AbsenceTypeInstance",function(t,n,a,s,r,o){return t.debug("AbsenceType"),a.extend({all:function(e){return r.all(e).then(function(e){return e.map(function(e){return o.init(e,!0)})})},calculateToilExpiryDate:function(e,t,n){return r.calculateToilExpiryDate(e,t,n)},canExpire:function(e){return r.all({accrual_expiration_unit:{"IS NOT NULL":1},accrual_expiration_duration:{"IS NOT NULL":1},allow_accruals_request:1,id:e,options:{limit:1},return:["id"]}).then(function(e){return e.length>0})},loadCalculationUnits:function(t){return s.valuesOf("hrleaveandabsences_absence_type_calculation_unit").then(function(n){return n=e.indexBy(n,"value"),e.map(t,function(t){return e.assign(t,{calculation_unit_label:n[t.calculation_unit].label,calculation_unit_name:n[t.calculation_unit].name})})})}})}])}),define("leave-absences/shared/components/leave-requests-heatmap.component",["common/moment","common/components/heatmap.component","leave-absences/shared/modules/components"],function(e,t,n){function a(){function t(e){e.leaveRequests&&n()}function n(){s.heatmapValues={},a().forEach(function(t){var n=e(t.date).isoWeekday();s.heatmapValues[n]||(s.heatmapValues[n]=0),s.heatmapValues[n]++})}function a(){return s.leaveRequests.reduce(function(e,t){return e.concat(t.dates)},[])}var s=this;s.heatmapValues={},s.$onChanges=t}n.component("leaveRequestsHeatmap",{bindings:{leaveRequests:"<"},controller:a,controllerAs:"LeaveRequestsHeatmap",templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-requests-heatmap.html"}]})}),define("leave-absences/shared/apis/leave-request.api",["leave-absences/shared/modules/apis","common/lodash","common/services/api"],function(e,t){"use strict";e.factory("LeaveRequestAPI",["$log","api","$q","shared-settings",function(e,n,a){return e.debug("LeaveRequestAPI"),n.extend({all:function(t,n,s,r,o){e.debug("LeaveRequestAPI.all");var i=a.defer();return t&&t.contact_id&&t.contact_id.IN&&0===t.contact_id.IN.length?i.resolve({list:[],total:0,allIds:[]}):i.resolve(this.getAll("LeaveRequest",t,n,s,r,"getFull",o)),i.promise},balanceChangeByAbsenceType:function(n){e.debug("LeaveRequestAPI.balanceChangeByAbsenceType");var s=a.defer();return n.contact_id&&n.period_id||s.reject("contact_id and period_id are mandatory"),n=t.defaults(n,{statuses:null,public_holiday:!1}),this.sendGET("LeaveRequest","getbalancechangebyabsencetype",n,!1).then(function(e){s.resolve(e.values)}),s.promise},calculateBalanceChange:function(n){return e.debug("LeaveRequestAPI.calculateBalanceChange",n),this.sendPOST("LeaveRequest","calculatebalancechange",n).then(function(e){return e.values.breakdown=t.values(e.values.breakdown),e.values})},getBalanceChangeBreakdown:function(e){return this.sendGET("LeaveRequest","getBreakdown",{leave_request_id:e},!1)},getWorkDayForDate:function(e,t){return this.sendGET("LeaveRequest","getWorkDayForDate",{leave_date:e,contact_id:t.toString()},!1)},create:function(t){return e.debug("LeaveRequestAPI.create",t),this.sendPOST("LeaveRequest","create",t).then(function(e){return e.values[0]})},delete:function(e){return this.sendPOST("LeaveRequest","delete",{id:e})},deleteAttachment:function(e,n,a){return a=t.assign({},a,{leave_request_id:e,attachment_id:n}),this.sendPOST("LeaveRequest","deleteattachment",a).then(function(e){return e.values})},deleteComment:function(e,n){return n=t.assign({},n,{comment_id:e}),this.sendPOST("LeaveRequest","deletecomment",n).then(function(e){return e.values})},find:function(t){return e.debug("LeaveRequestAPI.find"),this.sendGET("LeaveRequest","getFull",{id:t},!1).then(function(e){return 0===e.values.length?a.reject("LeaveRequest not found with this ID"):e.values[0]})},getAttachments:function(e,n){return n=t.assign({},n,{leave_request_id:e}),this.sendGET("LeaveRequest","getattachments",n,!1).then(function(e){return e.values})},getComments:function(e,n){return n=t.assign({},n,{leave_request_id:e}),this.sendGET("LeaveRequest","getcomment",n,!1).then(function(e){return e.values})},isManagedBy:function(t,n){return e.debug("LeaveRequestAPI.isManagedBy"),this.sendPOST("LeaveRequest","isManagedBy",{leave_request_id:t,contact_id:n}).then(function(e){return e.values})},isValid:function(n){e.debug("LeaveRequestAPI.isValid",n);var s=a.defer();return this.sendPOST("LeaveRequest","isValid",n).then(function(e){e.count>0?s.reject(t(e.values).map().flatten().value()):s.resolve(e.values)}),s.promise},saveComment:function(e,n,a){return a=t.assign({},a,{leave_request_id:e,text:n.text,contact_id:n.contact_id}),this.sendPOST("LeaveRequest","addcomment",a).then(function(e){return e.values})},update:function(t){e.debug("LeaveRequestAPI.update",t);var n=a.defer();return t.id||n.reject("id is mandatory field"),this.sendPOST("LeaveRequest","create",t).then(function(e){return e.values[0]})}})}])}),define("leave-absences/shared/instances/leave-request.instance",["common/lodash","common/moment","leave-absences/shared/modules/models-instances","common/models/option-group","common/models/instances/instance","leave-absences/shared/models/absence-type.model"],function(e,t,n){"use strict";n.factory("LeaveRequestInstance",["$q","checkPermissions","OptionGroup","shared-settings","ModelInstance","LeaveRequestAPI","AbsenceType",function(n,a,s,r,o,i,c){function u(e){return v(e).then(function(e){var t=this.status_id;return this.status_id=e.value,this.update().catch(function(e){return this.status_id=t,n.reject(e)}.bind(this))}.bind(this))}function l(){return c.all({id:this.type_id}).then(c.loadCalculationUnits).then(function(e){return n.all({calculatedBalanceChange:this.calculateBalanceChange(e[0].calculation_unit_name),currentBalanceChange:this.getBalanceChangeBreakdown()})}.bind(this)).then(function(e){return+e.currentBalanceChange.amount!=+e.calculatedBalanceChange.amount})}function d(e){return v(e).then(function(e){return this.status_id===e.value}.bind(this))}function m(){var t=[];return e.forEach(this.files,function(e){e.toBeDeleted&&t.push(i.deleteAttachment(this.id,e.attachment_id))}.bind(this)),n.all(t)}function f(e){return t.duration(e.time_to).subtract(t.duration(e.time_from)).asHours()}function v(t){return s.valuesOf("hrleaveandabsences_leave_request_status").then(function(n){return e.find(n,function(e){return e.name===t})})}function h(t){var a=e.cloneDeep(t),s=a.breakdown.length>1,r=e.first(e.values(a.breakdown)),o=e.last(e.values(a.breakdown));return n.all([this.getWorkDayForDate(r.date),s&&this.getWorkDayForDate(o.date)]).then(function(t){return r.amount=t[0].time_from?Math.min(this.from_date_amount,f(t[0])):0,s&&(o.amount=t[1].time_from?Math.min(this.to_date_amount,f(t[1])):0),a.amount=-1*e.reduce(a.breakdown,function(e,t){return e+t.amount},0),a}.bind(this))}function p(){var e=this.id,t=[];return t.push(n.sequence(this.comments.filter(function(e){return!e.comment_id}).map(function(t){return function(){return i.saveComment(e,t)}}))),t=t.concat(this.comments.filter(function(e){return e.comment_id&&e.toBeDeleted}).map(function(e){return i.deleteComment(e.comment_id)})),n.all(t)}return o.extend({defaultCustomData:function(){return{comments:[],files:[],request_type:"leave"}},calculateBalanceChange:function(t){var n=["contact_id","from_date","to_date","type_id","from_date_type","to_date_type"];return"hours"===t&&e.pull(n,"from_date_type","to_date_type"),i.calculateBalanceChange(e.pick(this,n)).then(function(e){return"hours"===t?h.call(this,e):e}.bind(this))},cancel:function(){return u.call(this,r.statusNames.cancelled)},approve:function(){return u.call(this,r.statusNames.approved)},checkIfBalanceChangeNeedsRecalculation:function(){return l.call(this)},reject:function(){return u.call(this,r.statusNames.rejected)},sendBack:function(){return u.call(this,r.statusNames.moreInformationRequired)},update:function(){return i.update(this.toAPI()).then(function(){return n.all([p.call(this),m.call(this)])
}.bind(this))},create:function(){return i.create(this.toAPI()).then(function(e){return this.id=e.id,n.all([p.call(this)])}.bind(this))},deleteAttachment:function(e){e.toBeDeleted||(e.toBeDeleted=!0)},deleteComment:function(t){if(t.comment_id)return void(t.toBeDeleted=!0);this.comments=e.reject(this.comments,function(e){return t.created_at===e.created_at&&t.text===e.text})},delete:function(){return i.delete(this.id)},getBalanceChangeBreakdown:function(){return i.getBalanceChangeBreakdown(this.id).then(function(t){return{amount:e.reduce(t.values,function(e,t){return e+parseFloat(t.amount)},0),breakdown:t.values.map(function(e){return{amount:Math.abs(parseFloat(e.amount)),date:e.date,type:{id:e.id,value:e.type,label:e.label}}})}})},getWorkDayForDate:function(e){return i.getWorkDayForDate(e,this.contact_id).then(function(e){return e.values}).catch(function(e){return n.reject(e)})},isValid:function(){return i.isValid(this.toAPI())},isApproved:function(){return d.call(this,r.statusNames.approved)},isAwaitingApproval:function(){return d.call(this,r.statusNames.awaitingApproval)},isCancelled:function(){return d.call(this,r.statusNames.cancelled)},isRejected:function(){return d.call(this,r.statusNames.rejected)},isSentBack:function(){return d.call(this,r.statusNames.moreInformationRequired)},loadComments:function(){return this.id?i.getComments(this.id).then(function(e){this.comments=e}.bind(this)):n.resolve()},roleOf:function(e){return this.contact_id===e?n.resolve("owner"):a(r.permissions.admin.administer).then(function(t){return t?"admin":i.isManagedBy(this.id,e).then(function(e){return e?"manager":"none"})}.bind(this))},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files"],a)||(t[a]=this[a])},loadAttachments:function(){return this.id?i.getAttachments(this.id).then(function(e){this.files=e}.bind(this)):n.resolve()}})}])}),define("leave-absences/shared/models/leave-request.model",["leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/leave-request.api","leave-absences/shared/instances/leave-request.instance"],function(e){"use strict";e.factory("LeaveRequest",["$log","Model","LeaveRequestAPI","LeaveRequestInstance",function(e,t,n,a){return e.debug("LeaveRequest"),t.extend({all:function(e,t,s,r,o){return n.all(this.processFilters(e),t,s,r,o).then(function(e){return e.list=e.list.map(function(e){return a.init(e,!0)}),e})},balanceChangeByAbsenceType:function(e){return n.balanceChangeByAbsenceType(this.processFilters(e))},find:function(e){return n.find(e).then(function(e){return a.init(e,!0)})}})}])}),define("leave-absences/shared/components/leave-widget/leave-widget-absence-types-amount-taken.component",["common/lodash","common/moment","leave-absences/shared/modules/components","leave-absences/shared/components/leave-requests-heatmap.component","leave-absences/shared/models/leave-request.model"],function(e,t,n){function a(t,n,a){function s(){r()&&o().finally(function(){t.$emit("LeaveWidget::childIsReady",l)})}function r(){return d.absenceTypes&&d.absenceTypes.length&&d.contactId&&d.absencePeriod&&d.leaveRequestStatuses&&d.leaveRequestStatuses.length}function o(){var e=i(),t=c();return n.all({contact_id:d.contactId,from_date:{">=":d.absencePeriod.start_date},to_date:{"<=":d.absencePeriod.end_date},status_id:{IN:t},type_id:{IN:e}},null,null,null,!1).then(function(e){d.leaveRequests=e.list}).then(u)}function i(){return d.absenceTypes.map(function(e){return e.id})}function c(){return d.leaveRequestStatuses.map(function(e){return e.value})}function u(){d.absenceTypes=d.absenceTypes.map(function(t){var n;return n=d.leaveRequests.filter(function(e){return+e.type_id==+t.id}).reduce(function(e,t){return e+t.balance_change},0),e.assign({balance:Math.abs(n)},t)})}var l="leave-widget-absence-types-amount-taken",d=this;d.leaveRequests=[],d.$onChanges=s,function(){t.$emit("LeaveWidget::childIsLoading",l)}()}n.component("leaveWidgetAbsenceTypesAmountTaken",{bindings:{title:"@",leaveName:"@?",absenceTypes:"<",contactId:"<",absencePeriod:"<",leaveRequestStatuses:"<"},controller:a,controllerAs:"absenceTypesTaken",templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-widget/leave-widget-absence-types-amount-taken.html"}]}),a.$inject=["$scope","LeaveRequest","OptionGroup"]}),define("leave-absences/shared/apis/entitlement.api",["leave-absences/shared/modules/apis","common/lodash","common/services/api"],function(e,t){"use strict";e.factory("EntitlementAPI",["$log","api",function(e,n){function a(e){var n=t.clone(e),a=n["api.LeavePeriodEntitlement.getremainder"].values;return a.length&&(n.remainder=a[0].remainder),delete n["api.LeavePeriodEntitlement.getremainder"],n}function s(e){var n=t.clone(e),a=n["api.LeavePeriodEntitlement.getentitlement"].values[0].entitlement;return n.value=a,delete n["api.LeavePeriodEntitlement.getentitlement"],n}return e.debug("EntitlementAPI"),n.extend({all:function(t,n){return e.debug("EntitlementAPI.all"),t["api.LeavePeriodEntitlement.getentitlement"]={entitlement_id:"$value.id"},n&&(t["api.LeavePeriodEntitlement.getremainder"]={entitlement_id:"$value.id",include_future:!0}),this.sendGET("LeavePeriodEntitlement","get",t,!1).then(function(e){return e.values}).then(function(e){return e=e.map(s),n&&(e=e.map(a)),e})},breakdown:function(t){return e.debug("EntitlementAPI.breakdown"),this.sendGET("LeavePeriodEntitlement","getbreakdown",t).then(function(e){return e.values})},getLeaveBalances:function(t,n,a,s,r){return e.debug("EntitlementAPI.getLeaveBalances"),this.getAll("LeavePeriodEntitlement",t,n,a,s,"getLeaveBalances",r)}})}])}),define("leave-absences/shared/apis/entitlement-log.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("EntitlementLogAPI",["$log","api",function(e,t){return e.debug("EntitlementLogAPI"),t.extend({all:function(t){return e.debug("EntitlementLogAPI.all"),this.sendGET("LeavePeriodEntitlementLog","get",t,!1).then(function(e){return e.values})}})}])}),define("leave-absences/shared/instances/entitlement.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("EntitlementInstance",["$log","ModelInstance","EntitlementAPI",function(e,t,n){return e.debug("EntitlementInstance"),t.extend({defaultCustomData:function(){return{remainder:{current:0,future:0},breakdown:[]}},getBreakdown:function(){return n.breakdown({entitlement_id:this.id}).then(function(e){this.breakdown=e}.bind(this))}})}])}),define("leave-absences/shared/models/entitlement.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/entitlement.api","leave-absences/shared/apis/entitlement-log.api","leave-absences/shared/instances/entitlement.instance"],function(e,t){"use strict";t.factory("Entitlement",["$log","Model","EntitlementAPI","EntitlementInstance","EntitlementLogAPI",function(t,n,a,s,r){return t.debug("Entitlement"),n.extend({all:function(e,t){return a.all(this.processFilters(e),t).then(function(e){return e.map(function(e){return s.init(e,!0)})})},breakdown:function(t,n){return a.breakdown(t).then(function(t){return n?(n.map(function(n){var a=e.find(t,function(e){return e.id===n.id});return a&&(n.breakdown=a.breakdown),n}),n):t.map(function(e){return s.init(e,!0)})})},logs:function(t){return t=e.cloneDeep(t||{}),t.contact_id&&(t["entitlement_id.contact_id"]=t.contact_id,delete t.contact_id),t.period_id&&(t["entitlement_id.period_id"]=t.period_id,delete t.period_id),t.return=t.return||[],t.return.push("entitlement_id","entitlement_id.type_id","editor_id","entitlement_amount","comment","created_date"),r.all(t)}})}])}),define("leave-absences/shared/components/leave-widget/leave-widget-absence-types-available-balance.component",["common/lodash","leave-absences/shared/modules/components","leave-absences/shared/models/entitlement.model"],function(e,t){function n(t,n){function a(){s()&&o().then(function(t){return e.indexBy(t,"type_id")}).then(i).then(r).then(function(e){u.absenceTypes=e}).then(function(){t.$emit("LeaveWidget::childIsReady",c)})}function s(){return u.absenceTypes&&u.absencePeriod&&u.contactId}function r(e){return e.filter(function(e){var t=e.entitlement&&e.entitlement.value>0,n="1"===e.allow_overuse,a="1"===e.allow_accruals_request;return t||n||a})}function o(){return n.all({contact_id:u.contactId,period_id:u.absencePeriod.id,"type_id.is_active":!0},!0)}function i(t){return u.absenceTypes.map(function(n){return e.assign({entitlement:t[n.id]},n)})}var c="leave-widget-absence-types-available-balance",u=this;u.$onChanges=a,function(){t.$emit("LeaveWidget::childIsLoading",c)}()}t.component("leaveWidgetAbsenceTypesAvailableBalance",{bindings:{absencePeriod:"<",absenceTypes:"<",contactId:"<"},controller:n,controllerAs:"leaveWidgetBalance",templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-widget/leave-widget-absence-types-available-balance.html"}]}),n.$inject=["$scope","Entitlement"]}),define("leave-absences/shared/components/leave-widget/leave-widget-next-leave.component",["common/lodash","common/moment","leave-absences/shared/modules/components","leave-absences/shared/models/leave-request.model"],function(e,t,n){function a(n,a,s,r,o){function i(){c()&&n.all([m(),f()]).then(function(){b.nextLeaveRequest&&(u(),h(),v(),p())}).finally(function(){a.$emit("LeaveWidget::childIsReady",g)})}function c(){return b.absenceTypes&&b.absenceTypes.length&&b.contactId&&b.leaveRequestStatuses&&b.leaveRequestStatuses.length}function u(){b.nextLeaveRequest.from_date=b.nextLeaveRequest.from_date&&t(b.nextLeaveRequest.from_date),b.nextLeaveRequest.to_date=b.nextLeaveRequest.to_date&&t(b.nextLeaveRequest.to_date)}function l(){return e.pluck(b.absenceTypes,"id")}function d(){return e.pluck(b.leaveRequestStatuses,"value")}function m(){return r.valuesOf("hrleaveandabsences_leave_request_day_type").then(function(t){b.dayTypes=e.indexBy(t,"value")})}function f(){var e=t().format(o.serverDateFormat);return s.all({contact_id:b.contactId,from_date:{">=":e},request_type:"leave",status_id:{IN:d()},type_id:{IN:l()},options:{limit:1}},null,"from_date ASC",null,!1).then(function(e){b.nextLeaveRequest=e.list[0]||null})}function v(){b.nextLeaveRequest.balance_change=Math.abs(b.nextLeaveRequest.balance_change)}function h(){var t=e.find(b.absenceTypes,function(e){return+e.id==+b.nextLeaveRequest.type_id})||{};b.nextLeaveRequest["type_id.title"]=t.title,b.nextLeaveRequest["type_id.calculation_unit_name"]=t.calculation_unit_name}function p(){b.requestStatus=e.find(b.leaveRequestStatuses,function(e){return+e.value==+b.nextLeaveRequest.status_id})}var g="leave-widget-next-leave",b=this;b.dayTypes={},b.balanceDeduction=0,b.nextLeaveRequest=null,b.requestStatus={},b.$onChanges=i,function(){a.$emit("LeaveWidget::childIsLoading",g)}()}n.component("leaveWidgetNextLeave",{bindings:{absenceTypes:"<",contactId:"<",leaveRequestStatuses:"<"},controller:a,controllerAs:"nextLeave",templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-widget/leave-widget-next-leave.html"}]}),a.$inject=["$q","$scope","LeaveRequest","OptionGroup","shared-settings"]}),define("leave-absences/shared/components/leave-widget/leave-widget.component",["common/angular","common/lodash","common/moment","common/directives/loading","common/directives/help-text.directive","common/filters/time-unit-applier.filter","common/models/contract","common/services/pub-sub","leave-absences/shared/modules/shared-settings","leave-absences/shared/modules/components","leave-absences/shared/models/absence-period.model","leave-absences/shared/models/absence-type.model","leave-absences/shared/components/leave-widget/leave-widget-absence-types-amount-taken.component","leave-absences/shared/components/leave-widget/leave-widget-absence-types-available-balance.component","leave-absences/shared/components/leave-widget/leave-widget-next-leave.component"],function(e,t,n){function a(e,a,s,r,o,i,c,u){function l(){q++,A.loading.childComponents=!0}function d(){--q<=0&&(q=0,A.loading.childComponents=!1)}function m(e){return t.find(e,function(e){return e.current})}function f(e){return m(e)||v(e)}function v(e){return t.chain(e).sort(function(e,t){return n(e.end_date).diff(t)}).last().value()}function h(){s.$on("LeaveWidget::childIsLoading",l),s.$on("LeaveWidget::childIsReady",d),p()}function p(){["LeaveRequest::new","LeaveRequest::edit","LeaveRequest::delete","LeaveRequest::updatedByManager","LeaveRequest::edit","contract:created","contract:deleted","contract-refresh"].forEach(function(e){u.subscribe(e,g)})}function g(){y().then(function(){return a.all([b(),R(),_()])}).finally(function(){A.loading.component=!1})}function b(){return o.all().then(o.loadCalculationUnits).then(function(e){A.absenceTypes=e,A.sicknessAbsenceTypes=e.filter(function(e){return+e.is_sick})})}function y(){return i.all({contact_id:A.contactId,deleted:!1}).then(function(e){A.jobContract=t.find(e,function(e){return+e.is_current})}).then(function(){if(!A.jobContract)return a.reject()})}function _(){return c.valuesOf("hrleaveandabsences_leave_request_status").then(function(e){A.leaveRequestStatuses=e.filter(function(e){return t.includes(C,e.name)})})}function R(){return r.all().then(f).then(function(e){A.absencePeriod=e})}var C=["approved","admin_approved","awaiting_approval","more_information_required"],q=0,A=this;A.absenceTypes=[],A.absencePeriod=null,A.jobContract=null,A.loading={childComponents:!1,component:!0},A.leaveRequestStatuses=[],A.sicknessAbsenceTypes=[],function(){e.debug("Controller: leaveWidgetController"),h(),g()}()}e.module("leave-absences.components.leave-widget",["common.components","common.directives","common.filters","common.models","common.services","leave-absences.components","leave-absences.models","leave-absences.settings"]).component("leaveWidget",{bindings:{contactId:"<"},controller:a,controllerAs:"leaveWidget",templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-widget/leave-widget.html"}]}),a.$inject=["$log","$q","$scope","AbsencePeriod","AbsenceType","Contract","OptionGroup","pubSub"]}),define("contact-summary/modules/contact-summary.module",["common/angular","contact-summary/modules/contact-summary.config","contact-summary/modules/contact-summary.constants","contact-summary/modules/contact-summary.controllers","contact-summary/modules/contact-summary.core","contact-summary/modules/contact-summary.directives","contact-summary/modules/contact-summary.run","contact-summary/modules/contact-summary.services","leave-absences/shared/components/leave-widget/leave-widget.component"],function(e){e.module("contactsummary",["contactsummary.core","contactsummary.config","contactsummary.run","contactsummary.constants","contactsummary.controllers","contactsummary.directives","contactsummary.services","leave-absences.components.leave-widget"])}),function(e,t){t.config({urlArgs:"bust="+(new Date).getTime(),paths:{"contact-summary":e.vars.contactsummary.baseURL+"/js/src/contact-summary"}}),t(["contact-summary/modules/contact-summary.module"],function(){"use strict";document.dispatchEvent("function"==typeof window.CustomEvent?new window.CustomEvent("contactsummaryReady"):function(){var e=document.createEvent("Event");return e.initEvent("contactsummaryReady",!0,!0),e}())})}(CRM,require);
//# sourceMappingURL=/sites/all/modules/civicrm/tools/extensions/civihr/contactsummary/js/dist/contact-summary.min.js.map